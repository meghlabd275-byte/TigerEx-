user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=trading:10m rate=1000r/m;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Upstream backend services
    upstream auth_service {
        least_conn;
        server auth-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream trading_engine {
        least_conn;
        server trading-engine:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream wallet_service {
        least_conn;
        server wallet-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream kyc_service {
        least_conn;
        server kyc-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream notification_service {
        least_conn;
        server notification-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream analytics_service {
        least_conn;
        server analytics-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream admin_service {
        least_conn;
        server admin-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream blockchain_service {
        least_conn;
        server blockchain-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream p2p_service {
        least_conn;
        server p2p-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream copy_trading_service {
        least_conn;
        server copy-trading-service:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream web_app {
        least_conn;
        server web-app:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream admin_dashboard {
        least_conn;
        server admin-dashboard:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream landing_pages {
        least_conn;
        server landing-pages:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Main server configuration
    server {
        listen 80;
        server_name localhost tigerex.local;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;

        # Connection limits
        limit_conn conn_limit_per_ip 20;

        # Client settings
        client_max_body_size 10M;
        client_body_timeout 60s;
        client_header_timeout 60s;

        # Landing pages (marketing site)
        location / {
            proxy_pass http://landing_pages;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Web trading application
        location /app {
            proxy_pass http://web_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Admin dashboard
        location /admin {
            proxy_pass http://admin_dashboard;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Additional security for admin
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        # API routes
        location /api/v1/auth {
            limit_req zone=auth burst=20 nodelay;
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        location /api/v1/trading {
            limit_req zone=trading burst=100 nodelay;
            proxy_pass http://trading_engine;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 1s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        location /api/v1/wallet {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://wallet_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        location /api/v1/kyc {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://kyc_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        location /api/v1/notifications {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://notification_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1/analytics {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://analytics_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1/admin {
            limit_req zone=api burst=30 nodelay;
            proxy_pass http://admin_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Admin API access control
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }

        location /api/v1/blockchain {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://blockchain_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1/p2p {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://p2p_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/v1/copy-trading {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://copy_trading_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSocket connections
        location /ws {
            proxy_pass http://trading_engine;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static assets caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
        }

        # Security.txt
        location /.well-known/security.txt {
            return 200 "Contact: security@tigerex.com\nExpires: 2025-12-31T23:59:59.000Z\nEncryption: https://tigerex.com/pgp-key.txt\nPreferred-Languages: en\nCanonical: https://tigerex.com/.well-known/security.txt\n";
            add_header Content-Type text/plain;
        }

        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(env|log|conf)$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # HTTPS server (for production)
    server {
        listen 443 ssl http2;
        server_name tigerex.com www.tigerex.com;

        # SSL configuration
        ssl_certificate /etc/ssl/certs/tigerex.crt;
        ssl_certificate_key /etc/ssl/private/tigerex.key;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        # Modern configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # HSTS
        add_header Strict-Transport-Security "max-age=63072000" always;

        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;

        # Redirect HTTP to HTTPS
        if ($scheme != "https") {
            return 301 https://$host$request_uri;
        }

        # Include the same location blocks as HTTP server
        include /etc/nginx/conf.d/locations.conf;
    }
}

# Stream configuration for TCP/UDP load balancing
stream {
    # WebSocket load balancing
    upstream websocket_backend {
        least_conn;
        server trading-engine:8080;
    }

    server {
        listen 9090;
        proxy_pass websocket_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        error_log /var/log/nginx/websocket.log;
    }
}