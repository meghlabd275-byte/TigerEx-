# TigerEx API Documentation

## Complete API Reference for All Services

### üåü Overview

TigerEx provides comprehensive REST and WebSocket APIs for all platform features. Our APIs are designed for high performance, reliability, and ease of use.

---

## üîê Authentication

### API Key Authentication

```http
GET /api/v1/account/info
X-API-Key: your_api_key
X-API-Secret: your_api_secret
X-Timestamp: 1640995200000
X-Signature: calculated_signature
```

### JWT Token Authentication

```http
POST /api/v1/auth/login
Content-Type: application/json

{
  "email": "user@example.com",
  "password": "password123",
  "twoFactorCode": "123456"
}
```

---

## üí≥ Payment Gateway API

### Base URL: `https://api.tigerex.com/payment`

#### Create Payment Intent

```http
POST /api/v1/payments/intent
Content-Type: application/json
Authorization: Bearer {token}

{
  "amount": "100.00",
  "currency": "USD",
  "payment_method": "CREDIT_CARD",
  "payment_provider": "STRIPE",
  "metadata": {
    "order_id": "order_123"
  }
}
```

**Response:**

```json
{
  "payment_intent_id": "pi_1234567890",
  "client_secret": "pi_1234567890_secret_abcdef",
  "amount": "100.00",
  "currency": "USD",
  "status": "PENDING",
  "expires_at": "2024-01-01T12:00:00Z"
}
```

#### Confirm Payment

```http
POST /api/v1/payments/confirm
Content-Type: application/json
Authorization: Bearer {token}

{
  "payment_intent_id": "pi_1234567890",
  "payment_method_id": "pm_1234567890",
  "billing_address": {
    "line1": "123 Main St",
    "city": "New York",
    "state": "NY",
    "postal_code": "10001",
    "country": "US"
  }
}
```

#### Get Payment Methods

```http
GET /api/v1/payments/methods?currency=USD
Authorization: Bearer {token}
```

**Response:**

```json
{
  "payment_methods": [
    {
      "method": "CREDIT_CARD",
      "provider": "stripe",
      "currencies": ["USD", "EUR", "GBP"],
      "fees": {
        "percentage": 2.9,
        "fixed": 0.3
      }
    }
  ]
}
```

#### Add Payment Method

```http
POST /api/v1/payments/methods
Content-Type: application/json
Authorization: Bearer {token}

{
  "payment_method": "CREDIT_CARD",
  "card_details": {
    "number": "4242424242424242",
    "exp_month": 12,
    "exp_year": 2025,
    "cvc": "123",
    "name": "John Doe"
  },
  "billing_address": {
    "line1": "123 Main St",
    "city": "New York",
    "state": "NY",
    "postal_code": "10001",
    "country": "US"
  }
}
```

#### Withdraw Funds

```http
POST /api/v1/payments/withdraw
Content-Type: application/json
Authorization: Bearer {token}

{
  "amount": "50.00",
  "currency": "USD",
  "payment_method_id": "pm_1234567890",
  "destination_address": "0x742d35Cc6634C0532925a3b8D"
}
```

---

## üìà Advanced Trading Engine API

### Base URL: `https://api.tigerex.com/trading`

#### Submit Order

```http
POST /api/v1/orders
Content-Type: application/json
Authorization: Bearer {token}

{
  "symbol": "BTCUSDT",
  "type": "LIMIT",
  "side": "BUY",
  "quantity": "0.01",
  "price": "45000.00",
  "time_in_force": "GTC",
  "trading_mode": "SPOT",
  "client_order_id": "my_order_123"
}
```

**Response:**

```json
{
  "order_id": "ORD_1640995200000_12345678",
  "client_order_id": "my_order_123",
  "symbol": "BTCUSDT",
  "status": "NEW",
  "type": "LIMIT",
  "side": "BUY",
  "quantity": "0.01",
  "price": "45000.00",
  "executed_qty": "0.00",
  "created_time": "2024-01-01T12:00:00Z"
}
```

#### Cancel Order

```http
DELETE /api/v1/orders/{order_id}
Authorization: Bearer {token}
```

#### Get Open Orders

```http
GET /api/v1/orders/open?symbol=BTCUSDT
Authorization: Bearer {token}
```

#### Get Order Book

```http
GET /api/v1/orderbook/{symbol}?limit=100
```

**Response:**

```json
{
  "symbol": "BTCUSDT",
  "bids": [
    ["44950.00", "0.15"],
    ["44940.00", "0.25"]
  ],
  "asks": [
    ["45000.00", "0.10"],
    ["45010.00", "0.20"]
  ],
  "timestamp": "2024-01-01T12:00:00Z"
}
```

#### Get Positions

```http
GET /api/v1/positions
Authorization: Bearer {token}
```

#### Advanced Order Types

```http
POST /api/v1/orders/advanced
Content-Type: application/json
Authorization: Bearer {token}

{
  "symbol": "BTCUSDT",
  "type": "OCO",
  "side": "SELL",
  "quantity": "0.01",
  "price": "46000.00",
  "stop_price": "44000.00",
  "stop_limit_price": "43900.00",
  "time_in_force": "GTC"
}
```

#### Grid Trading

```http
POST /api/v1/strategies/grid
Content-Type: application/json
Authorization: Bearer {token}

{
  "symbol": "BTCUSDT",
  "grid_spacing": "100.00",
  "grid_count": 10,
  "base_quantity": "0.01",
  "upper_price": "50000.00",
  "lower_price": "40000.00"
}
```

---

## üè¶ Lending & Borrowing API

### Base URL: `https://api.tigerex.com/lending`

#### Get Available Products

```http
GET /api/v1/lending/products?type=FLEXIBLE_SAVINGS&asset=BTC
Authorization: Bearer {token}
```

**Response:**

```json
{
  "products": [
    {
      "product_id": "FLEX_BTC_001",
      "name": "BTC Flexible Savings",
      "type": "FLEXIBLE_SAVINGS",
      "asset": "BTC",
      "interest_rate": "0.05",
      "min_amount": "0.001",
      "max_amount": "100.0",
      "is_flexible": true,
      "risk_level": "LOW"
    }
  ]
}
```

#### Subscribe to Product

```http
POST /api/v1/lending/subscribe
Content-Type: application/json
Authorization: Bearer {token}

{
  "product_id": "FLEX_BTC_001",
  "amount": "0.1",
  "auto_renew": true
}
```

#### Redeem Position

```http
POST /api/v1/lending/redeem
Content-Type: application/json
Authorization: Bearer {token}

{
  "position_id": "POS_1640995200000_12345678",
  "amount": "0.05"
}
```

#### Create Loan

```http
POST /api/v1/lending/loans
Content-Type: application/json
Authorization: Bearer {token}

{
  "loan_asset": "USDT",
  "loan_amount": "1000.00",
  "collateral_asset": "BTC",
  "collateral_amount": "0.025",
  "term_days": 30
}
```

#### Repay Loan

```http
POST /api/v1/lending/loans/repay
Content-Type: application/json
Authorization: Bearer {token}

{
  "loan_id": "LOAN_1640995200000_12345678",
  "amount": "500.00",
  "is_full_repayment": false
}
```

#### Get User Positions

```http
GET /api/v1/lending/positions
Authorization: Bearer {token}
```

#### Get User Loans

```http
GET /api/v1/lending/loans
Authorization: Bearer {token}
```

---

## üîó Token Listing API

### Base URL: `https://api.tigerex.com/tokens`

#### Submit Token Listing

```http
POST /api/v1/tokens/submit-listing
Content-Type: application/json
Authorization: Bearer {token}

{
  "token_info": {
    "symbol": "TIGER",
    "name": "TigerEx Token",
    "contract_address": "0x742d35Cc6634C0532925a3b8D",
    "blockchain": "ethereum",
    "token_type": "ERC20",
    "decimals": 18,
    "total_supply": "1000000000"
  },
  "listing_type": "HYBRID",
  "requested_pairs": ["USDT", "USDC", "BTC", "ETH"],
  "project_info": {
    "website": "https://tigerex.com",
    "whitepaper": "https://tigerex.com/whitepaper.pdf",
    "description": "TigerEx native token"
  }
}
```

#### Get Listing Status

```http
GET /api/v1/tokens/listing-status/{application_id}
Authorization: Bearer {token}
```

#### Get Listed Tokens

```http
GET /api/v1/tokens/listed?blockchain=ethereum&status=ACTIVE
```

---

## üíß Liquidity Aggregator API

### Base URL: `https://api.tigerex.com/liquidity`

#### Get Best Route

```http
GET /api/v1/liquidity/route/BTCUSDT?side=BUY&quantity=1.5
Authorization: Bearer {token}
```

**Response:**

```json
{
  "symbol": "BTCUSDT",
  "side": "BUY",
  "quantity": "1.5",
  "routes": [
    {
      "exchange": "binance",
      "quantity": "1.0",
      "price": "45000.00"
    },
    {
      "exchange": "uniswap_v3",
      "quantity": "0.5",
      "price": "45010.00"
    }
  ],
  "total_price": "45003.33",
  "price_impact": "0.0074",
  "execution_time_ms": 150
}
```

#### Execute Route

```http
POST /api/v1/liquidity/execute
Content-Type: application/json
Authorization: Bearer {token}

{
  "route_id": "route_1640995200000_12345678",
  "slippage_tolerance": "0.01"
}
```

#### Get Arbitrage Opportunities

```http
GET /api/v1/liquidity/arbitrage?min_profit=0.5
Authorization: Bearer {token}
```

---

## üåê Web3 Integration API

### Base URL: `https://api.tigerex.com/web3`

#### Get Supported Blockchains

```http
GET /api/v1/web3/blockchains
```

