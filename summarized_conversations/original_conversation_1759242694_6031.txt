{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="desktop-apps/README.md">\n# TigerEx Desktop Applications\n\nCross-platform desktop applications for Windows, macOS, and Linux built with Electron.\n\n## Features\n\n- **Cross-Platform**: Single codebase for Windows, macOS, and Linux\n- **Native Performance**: Built with Electron for native desktop experience\n- **Secure**: Context isolation and secure IPC communication\n- **Auto-Updates**: Automatic update checking and installation\n- **System Tray**: Background operation with system tray icon\n- **Keyboard Shortcuts**: Comprehensive keyboard shortcuts for power users\n- **Persistent Storage**: Local data storage with electron-store\n- **Native Notifications**: Desktop notifications for important events\n\n## Supported Platforms\n\n### Windows\n- Windows 10 and later (64-bit)\n- Installer formats: NSIS, Portable\n- Auto-update support\n\n### macOS\n- macOS 10.13 (High Sierra) and later\n- Distribution formats: DMG, ZIP\n- Code signing and notarization support\n- Auto-update support\n\n### Linux\n- Ubuntu 18.04 and later\n- Debian 10 and later\n- Fedora 32 and later\n- Distribution formats: AppImage, DEB, RPM\n- Auto-update support\n\n## Installation\n\n### Prerequisites\n```bash\nnpm install\n```\n\n### Development\n```bash\nnpm start\n```\n\n### Building\n\n#### Build for all platforms\n```bash\nnpm run build\n```\n\n#### Build for specific platform\n```bash\n# Windows\nnpm run build:win\n\n# macOS\nnpm run build:mac\n\n# Linux\nnpm run build:linux\n```\n\n## Distribution\n\nBuilt applications will be available in the `dist/` directory:\n\n- **Windows**: `TigerEx Setup.exe`, `TigerEx Portable.exe`\n- **macOS**: `TigerEx.dmg`, `TigerEx-mac.zip`\n- **Linux**: `TigerEx.AppImage`, `tigerex.deb`, `tigerex.rpm`\n\n## Features by Platform\n\n### Windows-Specific\n- Windows installer with custom branding\n- Start menu integration\n- Desktop shortcut creation\n- File association support\n- Windows notifications\n\n### macOS-Specific\n- DMG with custom background\n- Dock integration\n- Touch Bar support (MacBook Pro)\n- macOS notifications\n- Spotlight integration\n\n### Linux-Specific\n- AppImage (portable, no installation required)\n- DEB package (Debian/Ubuntu)\n- RPM package (Fedora/RHEL)\n- Desktop file integration\n- System tray support\n\n## Keyboard Shortcuts\n\n### Global\n- `Ctrl/Cmd + N` - New Order\n- `Ctrl/Cmd + ,` - Settings\n- `Ctrl/Cmd + Q` - Quit\n\n### Navigation\n- `Ctrl/Cmd + 1` - Markets\n- `Ctrl/Cmd + 2` - Trading\n- `Ctrl/Cmd + 3` - Portfolio\n- `Ctrl/Cmd + 4` - Wallet\n\n### View\n- `Ctrl/Cmd + R` - Reload\n- `Ctrl/Cmd + Shift + R` - Force Reload\n- `F11` - Toggle Fullscreen\n- `Ctrl/Cmd + +` - Zoom In\n- `Ctrl/Cmd + -` - Zoom Out\n- `Ctrl/Cmd + 0` - Reset Zoom\n\n## Configuration\n\n### Environment Variables\n- `API_URL` - Backend API URL (default: https://api.tigerex.com)\n- `NODE_ENV` - Environment (development/production)\n\n### Build Configuration\nEdit `package.json` build section to customize:\n- App ID\n- Product name\n- Icons\n- File associations\n- Auto-update settings\n\n## Security\n\n- **Context Isolation**: Enabled by default\n- **Node Integration**: Disabled in renderer\n- **Secure IPC**: All communication through preload script\n- **Content Security Policy**: Strict CSP headers\n- **Code Signing**: Support for Windows and macOS\n\n## Auto-Updates\n\nThe application checks for updates on startup and periodically:\n- Windows: Uses Squirrel.Windows\n- macOS: Uses Squirrel.Mac\n- Linux: Uses AppImage update mechanism\n\n## Troubleshooting\n\n### Windows\n- If installer fails, run as administrator\n- Check Windows Defender exclusions\n\n### macOS\n- If app won\'t open, check Gatekeeper settings\n- For unsigned builds: `xattr -cr TigerEx.app`\n\n### Linux\n- For AppImage: `chmod +x TigerEx.AppImage`\n- For permission issues: Check executable permissions\n\n## Development\n\n### Project Structure\n```\ndesktop-apps/\n├── main.js           # Main process\n├── preload.js        # Preload script\n├── package.json      # Dependencies and build config\n├── assets/           # Icons and images\n├── renderer/         # Renderer process (UI)\n└── dist/            # Built applications\n```\n\n### Adding Features\n1. Add IPC handlers in `main.js`\n2. Expose APIs in `preload.js`\n3. Use APIs in renderer process\n\n## License\n\nMIT License - See LICENSE file for details\n\n## Support\n\n- Documentation: https://docs.tigerex.com\n- Support: https://support.tigerex.com\n- Issues: https://github.com/tigerex/issues\n</create-file>\n</function_calls>'}