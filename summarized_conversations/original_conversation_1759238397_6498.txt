{'role': 'assistant', 'content': '<function_calls>\n<create-file file_path="mobile/TigerExApp/App.tsx">\nimport React, { useEffect, useState } from \'react\';\nimport { NavigationContainer } from \'@react-navigation/native\';\nimport { createBottomTabNavigator } from \'@react-navigation/bottom-tabs\';\nimport { createStackNavigator } from \'@react-navigation/stack\';\nimport { Provider as PaperProvider } from \'react-native-paper\';\nimport { Provider as ReduxProvider } from \'react-redux\';\nimport Icon from \'react-native-vector-icons/MaterialCommunityIcons\';\nimport { store } from \'./src/store\';\nimport { theme } from \'./src/theme\';\n\n// Screens\nimport LoginScreen from \'./src/screens/Auth/LoginScreen\';\nimport RegisterScreen from \'./src/screens/Auth/RegisterScreen\';\nimport HomeScreen from \'./src/screens/Home/HomeScreen\';\nimport MarketsScreen from \'./src/screens/Markets/MarketsScreen\';\nimport TradeScreen from \'./src/screens/Trade/TradeScreen\';\nimport PortfolioScreen from \'./src/screens/Portfolio/PortfolioScreen\';\nimport WalletScreen from \'./src/screens/Wallet/WalletScreen\';\nimport ProfileScreen from \'./src/screens/Profile/ProfileScreen\';\nimport P2PScreen from \'./src/screens/P2P/P2PScreen\';\nimport CopyTradingScreen from \'./src/screens/CopyTrading/CopyTradingScreen\';\nimport EarnScreen from \'./src/screens/Earn/EarnScreen\';\nimport TradingBotsScreen from \'./src/screens/TradingBots/TradingBotsScreen\';\nimport LaunchpadScreen from \'./src/screens/Launchpad/LaunchpadScreen\';\n\nconst Tab = createBottomTabNavigator();\nconst Stack = createStackNavigator();\n\nfunction AuthStack() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name="Login" component={LoginScreen} />\n      <Stack.Screen name="Register" component={RegisterScreen} />\n    </Stack.Navigator>\n  );\n}\n\nfunction MainTabs() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n\n          if (route.name === \'Home\') {\n            iconName = focused ? \'home\' : \'home-outline\';\n          } else if (route.name === \'Markets\') {\n            iconName = focused ? \'chart-line\' : \'chart-line\';\n          } else if (route.name === \'Trade\') {\n            iconName = focused ? \'swap-horizontal\' : \'swap-horizontal\';\n          } else if (route.name === \'Portfolio\') {\n            iconName = focused ? \'wallet\' : \'wallet-outline\';\n          } else if (route.name === \'Profile\') {\n            iconName = focused ? \'account\' : \'account-outline\';\n          }\n\n          return <Icon name={iconName} size={size} color={color} />;\n        },\n        tabBarActiveTintColor: theme.colors.primary,\n        tabBarInactiveTintColor: \'gray\',\n        headerShown: false,\n      })}\n    >\n      <Tab.Screen name="Home" component={HomeScreen} />\n      <Tab.Screen name="Markets" component={MarketsScreen} />\n      <Tab.Screen name="Trade" component={TradeScreen} />\n      <Tab.Screen name="Portfolio" component={PortfolioScreen} />\n      <Tab.Screen name="Profile" component={ProfileScreen} />\n    </Tab.Navigator>\n  );\n}\n\nfunction AppNavigator() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      {!isAuthenticated ? (\n        <Stack.Screen name="Auth" component={AuthStack} />\n      ) : (\n        <>\n          <Stack.Screen name="Main" component={MainTabs} />\n          <Stack.Screen name="Wallet" component={WalletScreen} />\n          <Stack.Screen name="P2P" component={P2PScreen} />\n          <Stack.Screen name="CopyTrading" component={CopyTradingScreen} />\n          <Stack.Screen name="Earn" component={EarnScreen} />\n          <Stack.Screen name="TradingBots" component={TradingBotsScreen} />\n          <Stack.Screen name="Launchpad" component={LaunchpadScreen} />\n        </>\n      )}\n    </Stack.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <ReduxProvider store={store}>\n      <PaperProvider theme={theme}>\n        <NavigationContainer>\n          <AppNavigator />\n        </NavigationContainer>\n      </PaperProvider>\n    </ReduxProvider>\n  );\n}\n</create-file>\n</function_calls>'}