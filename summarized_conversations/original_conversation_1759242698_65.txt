{'role': 'assistant', 'content': 'Now let me create a comprehensive API documentation file:\n\n<function_calls>\n<create-file file_path="API_DOCUMENTATION.md">\n# TigerEx Platform - Complete API Documentation\n\n## Table of Contents\n1. [Admin Panel APIs](#admin-panel-apis)\n2. [Payment Gateway API](#payment-gateway-api)\n3. [Advanced Trading API](#advanced-trading-api)\n4. [DeFi Enhancements API](#defi-enhancements-api)\n5. [Authentication](#authentication)\n6. [Error Handling](#error-handling)\n7. [Rate Limiting](#rate-limiting)\n\n---\n\n## Admin Panel APIs\n\n### 1. Alpha Market Admin API (Port 8115)\n\n#### Base URL\n```\nhttp://localhost:8115/api/admin\n```\n\n#### Endpoints\n\n**Create Alpha Strategy**\n```http\nPOST /strategies\nContent-Type: application/json\n\n{\n  "name": "Momentum Strategy",\n  "description": "High-frequency momentum trading",\n  "strategy_type": "momentum",\n  "provider_id": 1,\n  "risk_level": "high",\n  "min_investment": 1000.0,\n  "performance_fee": 20.0,\n  "management_fee": 2.0\n}\n\nResponse: 201 Created\n{\n  "id": 1,\n  "name": "Momentum Strategy",\n  "status": "active",\n  "created_at": "2025-01-15T10:00:00Z"\n}\n```\n\n**List Alpha Strategies**\n```http\nGET /strategies?skip=0&limit=100&strategy_type=momentum\n\nResponse: 200 OK\n{\n  "total": 50,\n  "strategies": [...]\n}\n```\n\n**Create Signal Provider**\n```http\nPOST /providers\nContent-Type: application/json\n\n{\n  "name": "Alpha Signals Pro",\n  "email": "contact@alphasignals.com",\n  "company": "Alpha Signals LLC",\n  "description": "Professional trading signals"\n}\n\nResponse: 201 Created\n```\n\n**Create Trading Signal**\n```http\nPOST /signals\nContent-Type: application/json\n\n{\n  "strategy_id": 1,\n  "provider_id": 1,\n  "symbol": "BTC/USDT",\n  "signal_type": "buy",\n  "entry_price": 45000.0,\n  "target_price": 50000.0,\n  "stop_loss": 43000.0,\n  "confidence": 85.0,\n  "timeframe": "4h",\n  "reasoning": "Strong bullish momentum",\n  "expires_at": "2025-01-20T00:00:00Z"\n}\n\nResponse: 201 Created\n```\n\n---\n\n### 2. Copy Trading Admin API (Port 8116)\n\n#### Base URL\n```\nhttp://localhost:8116/api/admin\n```\n\n#### Endpoints\n\n**Create Master Trader**\n```http\nPOST /traders\nContent-Type: application/json\n\n{\n  "user_id": 123,\n  "username": "crypto_master",\n  "display_name": "Crypto Master",\n  "bio": "10 years trading experience",\n  "risk_level": "medium",\n  "profit_sharing": 15.0,\n  "min_copy_amount": 100.0,\n  "max_followers": 1000\n}\n\nResponse: 201 Created\n```\n\n**Create Follower Relationship**\n```http\nPOST /followers\nContent-Type: application/json\n\n{\n  "user_id": 456,\n  "trader_id": 1,\n  "copy_mode": "fixed_amount",\n  "copy_amount": 1000.0,\n  "stop_loss_percentage": 10.0,\n  "take_profit_percentage": 20.0,\n  "max_open_positions": 5\n}\n\nResponse: 201 Created\n```\n\n**Get Leaderboard**\n```http\nGET /analytics/leaderboard?metric=roi&period=30d&limit=100\n\nResponse: 200 OK\n[\n  {\n    "id": 1,\n    "username": "crypto_master",\n    "roi_30d": 25.5,\n    "total_followers": 500,\n    "total_aum": 1000000.0\n  }\n]\n```\n\n---\n\n### 3. DEX Integration Admin API (Port 8117)\n\n#### Base URL\n```\nhttp://localhost:8117/api/admin\n```\n\n#### Endpoints\n\n**Add DEX Integration**\n```http\nPOST /dex-integrations\nContent-Type: application/json\n\n{\n  "name": "Uniswap V3",\n  "protocol": "uniswap_v3",\n  "chain": "ethereum",\n  "router_address": "0x...",\n  "factory_address": "0x...",\n  "supports_limit_orders": true,\n  "swap_fee": 0.3,\n  "gas_multiplier": 1.2\n}\n\nResponse: 201 Created\n```\n\n**Create Liquidity Pool**\n```http\nPOST /pools\nContent-Type: application/json\n\n{\n  "dex_id": 1,\n  "pool_address": "0x...",\n  "token0_address": "0x...",\n  "token0_symbol": "WETH",\n  "token0_decimals": 18,\n  "token1_address": "0x...",\n  "token1_symbol": "USDT",\n  "token1_decimals": 6\n}\n\nResponse: 201 Created\n```\n\n**Find Best Route**\n```http\nPOST /routes/find-best\nContent-Type: application/json\n\n{\n  "token_in": "0x...",\n  "token_out": "0x...",\n  "amount_in": 1.0,\n  "slippage_tolerance": 0.5,\n  "max_hops": 3\n}\n\nResponse: 200 OK\n{\n  "path": ["0x...", "0x...", "0x..."],\n  "pools": ["0x...", "0x..."],\n  "dexes": [1, 2],\n  "amount_out": 1500.0,\n  "price_impact": 0.2,\n  "gas_estimate": 150000\n}\n```\n\n---\n\n### 4. NFT Marketplace Admin API (Port 8119)\n\n#### Base URL\n```\nhttp://localhost:8119/api/admin\n```\n\n#### Endpoints\n\n**Create NFT Collection**\n```http\nPOST /collections\nContent-Type: application/json\n\n{\n  "name": "Crypto Punks",\n  "symbol": "PUNK",\n  "description": "10,000 unique collectible characters",\n  "contract_address": "0x...",\n  "chain": "ethereum",\n  "standard": "erc721",\n  "creator_address": "0x...",\n  "royalty_percentage": 2.5\n}\n\nResponse: 201 Created\n```\n\n**Verify Collection**\n```http\nPOST /collections/1/verify\n\nResponse: 200 OK\n{\n  "message": "Collection verified successfully"\n}\n```\n\n---\n\n### 5. Institutional Services Admin API (Port 8120)\n\n#### Base URL\n```\nhttp://localhost:8120/api/admin\n```\n\n#### Endpoints\n\n**Create Institutional Client**\n```http\nPOST /clients\nContent-Type: application/json\n\n{\n  "company_name": "Hedge Fund LLC",\n  "legal_entity": "Delaware Corporation",\n  "registration_number": "12345678",\n  "country": "USA",\n  "tier": "enterprise",\n  "primary_contact_name": "John Doe",\n  "primary_contact_email": "john@hedgefund.com",\n  "primary_contact_phone": "+1234567890",\n  "daily_trading_limit": 10000000.0,\n  "monthly_trading_limit": 200000000.0,\n  "trading_fee_percentage": 0.05,\n  "custody_fee_percentage": 0.02\n}\n\nResponse: 201 Created\n```\n\n---\n\n### 6. Lending & Borrowing Admin API (Port 8121)\n\n#### Base URL\n```\nhttp://localhost:8121/api/admin\n```\n\n#### Endpoints\n\n**Create Lending Pool**\n```http\nPOST /pools\nContent-Type: application/json\n\n{\n  "asset": "USDT",\n  "supply_apy": 5.0,\n  "borrow_apy": 8.0,\n  "ltv_ratio": 0.75,\n  "liquidation_threshold": 0.85,\n  "liquidation_penalty": 0.05\n}\n\nResponse: 201 Created\n```\n\n**Update Pool Parameters**\n```http\nPUT /pools/1\nContent-Type: application/json\n\n{\n  "supply_apy": 6.0,\n  "borrow_apy": 9.0\n}\n\nResponse: 200 OK\n```\n\n---\n\n### 7. Payment Gateway Admin API (Port 8122)\n\n#### Base URL\n```\nhttp://localhost:8122/api/admin\n```\n\n#### Endpoints\n\n**Add Payment Provider**\n```http\nPOST /providers\nContent-Type: application/json\n\n{\n  "name": "Stripe",\n  "provider_type": "card",\n  "api_endpoint": "https://api.stripe.com",\n  "api_key_encrypted": "encrypted_key",\n  "supports_deposits": true,\n  "supports_withdrawals": true,\n  "min_transaction_amount": 10.0,\n  "max_transaction_amount": 50000.0,\n  "deposit_fee_percentage": 2.5,\n  "withdrawal_fee_percentage": 1.0,\n  "supported_currencies": ["USD", "EUR", "GBP"],\n  "supported_countries": ["US", "UK", "EU"]\n}\n\nResponse: 201 Created\n```\n\n---\n\n## Payment Gateway API\n\n### Base URL\n```\nhttp://localhost:8123/api\n```\n\n### Endpoints\n\n**Create Deposit**\n```http\nPOST /deposits\nContent-Type: application/json\n\n{\n  "user_id": 123,\n  "provider": "stripe",\n  "amount": 1000.0,\n  "currency": "USD",\n  "return_url": "https://tigerex.com/deposit/callback"\n}\n\nResponse: 201 Created\n{\n  "transaction_id": "TXN-ABC123",\n  "amount": 1000.0,\n  "currency": "USD",\n  "fee": 25.0,\n  "net_amount": 975.0,\n  "status": "pending",\n  "payment_url": "https://checkout.stripe.com/...",\n  "created_at": "2025-01-15T10:00:00Z"\n}\n```\n\n**Create Withdrawal**\n```http\nPOST /withdrawals\nContent-Type: application/json\n\n{\n  "user_id": 123,\n  "provider": "stripe",\n  "amount": 500.0,\n  "currency": "USD",\n  "payment_method_id": "pm_xxx"\n}\n\nResponse: 201 Created\n{\n  "transaction_id": "TXN-DEF456",\n  "amount": 500.0,\n  "fee": 5.0,\n  "net_amount": 495.0,\n  "status": "pending"\n}\n```\n\n**Process Refund**\n```http\nPOST /refunds\nContent-Type: application/json\n\n{\n  "transaction_id": "TXN-ABC123",\n  "amount": 1000.0,\n  "reason": "Customer request"\n}\n\nResponse: 201 Created\n```\n\n**Add Payment Method**\n```http\nPOST /payment-methods\nContent-Type: application/json\n\n{\n  "user_id": 123,\n  "provider": "stripe",\n  "method_type": "card",\n  "card_token": "tok_xxx",\n  "is_default": true\n}\n\nResponse: 201 Created\n```\n\n**Get Available Providers**\n```http\nGET /providers\n\nResponse: 200 OK\n[\n  {\n    "provider": "stripe",\n    "min_amount": 10.0,\n    "max_amount": 50000.0,\n    "fee_percentage": 2.5,\n    "supports_deposits": true,\n    "supports_withdrawals": true,\n    "supported_currencies": ["USD", "EUR"]\n  }\n]\n```\n\n---\n\n## Advanced Trading API\n\n### Base URL\n```\nhttp://localhost:8124/api\n```\n\n### Endpoints\n\n**Create TWAP Order**\n```http\nPOST /orders/twap\nContent-Type: application/json\n\n{\n  "user_id": 123,\n  "symbol": "BTC/USDT",\n  "side": "buy",\n  "total_quantity": 1.0,\n  "duration_minutes": 60,\n  "limit_price": 45000.0,\n  "execution_strategy": "balanced"\n}\n\nResponse: 201 Created\n{\n  "order_id": "TWAP-ABC123",\n  "order_type": "twap",\n  "symbol": "BTC/USDT",\n  "side": "buy",\n  "total_quantity": 1.0,\n  "num_slices": 20,\n  "slice_size": 0.05,\n  "slice_interval_seconds": 180,\n  "start_time": "2025-01-15T10:00:00Z",\n  "end_time": "2025-01-15T11:00:00Z",\n  "status": "active"\n}\n```\n\n**Create VWAP Order**\n```http\nPOST /orders/vwap\nContent-Type: application/json\n\n{\n  "user_id": 123,\n  "symbol": "ETH/USDT",\n  "side": "sell",\n  "total_quantity": 10.0,\n  "duration_minutes": 120,\n  "execution_strategy": "passive"\n}\n\nResponse: 201 Created\n{\n  "order_id": "VWAP-DEF456",\n  "order_type": "vwap",\n  "num_slices": 40,\n  "status": "active"\n}\n```\n\n**Create Participation Rate Order**\n```http\nPOST /orders/participation-rate\nContent-Type: application/json\n\n{\n  "user_id": 123,\n  "symbol": "BTC/USDT",\n  "side": "buy",\n  "total_quantity": 2.0,\n  "participation_rate": 10.0,\n  "duration_minutes": 180\n}\n\nResponse: 201 Created\n```\n\n**Get Order Details**\n```http\nGET /orders/TWAP-ABC123\n\nResponse: 200 OK\n{\n  "order_id": "TWAP-ABC123",\n  "status": "executing",\n  "executed_quantity": 0.5,\n  "remaining_quantity": 0.5,\n  "avg_execution_price": 44950.0,\n  "executed_slices": 10,\n  "total_slices": 20\n}\n```\n\n---\n\n## DeFi Enhancements API\n\n### Base URL\n```\nhttp://localhost:8125/api\n```\n\n### Endpoints\n\n**Add DEX Protocol**\n```http\nPOST /dex-protocols\nContent-Type: application/json\n\n{\n  "protocol": "trader_joe",\n  "chain": "avalanche",\n  "router_address": "0x...",\n  "factory_address": "0x...",\n  "supports_limit_orders": false,\n  "default_fee_bps": 30\n}\n\nResponse: 201 Created\n```\n\n**Add Bridge Configuration**\n```http\nPOST /bridge-configs\nContent-Type: application/json\n\n{\n  "protocol": "thorchain",\n  "supported_chains": ["ethereum", "bsc", "avalanche"],\n  "supports_native_tokens": true,\n  "min_bridge_amount": 10.0,\n  "max_bridge_amount": 1000000.0,\n  "base_fee_percentage": 0.1,\n  "avg_bridge_time_minutes": 15\n}\n\nResponse: 201 Created\n```\n\n**Execute Cross-Chain Bridge**\n```http\nPOST /cross-chain/bridge\nContent-Type: application/json\n\n{\n  "user_id": 123,\n  "bridge_protocol": "thorchain",\n  "source_chain": "ethereum",\n  "source_token": "ETH",\n  "source_amount": 1.0,\n  "destination_chain": "bsc",\n  "destination_token": "BNB",\n  "slippage_tolerance": 0.5\n}\n\nResponse: 201 Created\n{\n  "transaction_id": "BRIDGE-ABC123",\n  "status": "pending",\n  "estimated_time_minutes": 15,\n  "bridge_fee": 0.001,\n  "estimated_destination_amount": 15.5\n}\n```\n\n**Execute DEX Swap**\n```http\nPOST /dex/swap\nContent-Type: application/json\n\n{\n  "user_id": 123,\n  "protocol": "trader_joe",\n  "chain": "avalanche",\n  "token_in": "AVAX",\n  "token_out": "USDT",\n  "amount_in": 10.0,\n  "slippage_tolerance": 0.5\n}\n\nResponse: 201 Created\n```\n\n---\n\n## Authentication\n\nAll API requests require authentication using API keys or JWT tokens.\n\n### API Key Authentication\n```http\nGET /api/resource\nAuthorization: Bearer YOUR_API_KEY\n```\n\n### JWT Token Authentication\n```http\nPOST /api/auth/login\nContent-Type: application/json\n\n{\n  "email": "user@example.com",\n  "password": "password123"\n}\n\nResponse: 200 OK\n{\n  "access_token": "eyJhbGciOiJIUzI1NiIs...",\n  "refresh_token": "eyJhbGciOiJIUzI1NiIs...",\n  "expires_in": 3600\n}\n```\n\nUse the access token in subsequent requests:\n```http\nGET /api/resource\nAuthorization: Bearer eyJhbGciOiJIUzI1NiIs...\n```\n\n---\n\n## Error Handling\n\nAll APIs return standard HTTP status codes and error responses:\n\n### Success Responses\n- `200 OK` - Request successful\n- `201 Created` - Resource created successfully\n- `204 No Content` - Request successful, no content to return\n\n### Error Responses\n- `400 Bad Request` - Invalid request parameters\n- `401 Unauthorized` - Authentication required\n- `403 Forbidden` - Insufficient permissions\n- `404 Not Found` - Resource not found\n- `429 Too Many Requests` - Rate limit exceeded\n- `500 Internal Server Error` - Server error\n\n### Error Response Format\n```json\n{\n  "error": {\n    "code": "INVALID_PARAMETER",\n    "message": "Invalid amount: must be greater than 0",\n    "details": {\n      "field": "amount",\n      "value": -100\n    }\n  }\n}\n```\n\n---\n\n## Rate Limiting\n\nAll APIs implement rate limiting to prevent abuse:\n\n### Limits\n- **Public endpoints**: 100 requests per minute\n- **Authenticated endpoints**: 1000 requests per minute\n- **Admin endpoints**: 5000 requests per minute\n\n### Rate Limit Headers\n```http\nX-RateLimit-Limit: 1000\nX-RateLimit-Remaining: 999\nX-RateLimit-Reset: 1642262400\n```\n\n### Rate Limit Exceeded Response\n```http\nHTTP/1.1 429 Too Many Requests\nContent-Type: application/json\n\n{\n  "error": {\n    "code": "RATE_LIMIT_EXCEEDED",\n    "message": "Rate limit exceeded. Please try again later.",\n    "retry_after": 60\n  }\n}\n```\n\n---\n\n## Webhooks\n\n### Payment Gateway Webhooks\n\nPayment providers send webhooks to notify about transaction events:\n\n```http\nPOST /api/webhooks/stripe\nContent-Type: application/json\nStripe-Signature: xxx\n\n{\n  "type": "payment.succeeded",\n  "id": "evt_xxx",\n  "data": {\n    "object": {\n      "id": "ch_xxx",\n      "amount": 100000,\n      "currency": "usd",\n      "status": "succeeded"\n    }\n  }\n}\n```\n\n### Webhook Verification\n\nAlways verify webhook signatures:\n```python\nimport hmac\nimport hashlib\n\ndef verify_webhook(payload, signature, secret):\n    expected = hmac.new(\n        secret.encode(),\n        payload.encode(),\n        hashlib.sha256\n    ).hexdigest()\n    return hmac.compare_digest(expected, signature)\n```\n\n---\n\n## SDK Examples\n\n### Python SDK\n```python\nfrom tigerex import TigerExClient\n\nclient = TigerExClient(api_key="YOUR_API_KEY")\n\n# Create TWAP order\norder = client.advanced_trading.create_twap_order(\n    symbol="BTC/USDT",\n    side="buy",\n    total_quantity=1.0,\n    duration_minutes=60\n)\n\n# Create deposit\ndeposit = client.payments.create_deposit(\n    provider="stripe",\n    amount=1000.0,\n    currency="USD"\n)\n```\n\n### JavaScript SDK\n```javascript\nconst TigerEx = require(\'tigerex-sdk\');\n\nconst client = new TigerEx({ apiKey: \'YOUR_API_KEY\' });\n\n// Create VWAP order\nconst order = await client.advancedTrading.createVWAPOrder({\n  symbol: \'ETH/USDT\',\n  side: \'sell\',\n  totalQuantity: 10.0,\n  durationMinutes: 120\n});\n\n// Add payment method\nconst method = await client.payments.addPaymentMethod({\n  provider: \'stripe\',\n  methodType: \'card\',\n  cardToken: \'tok_xxx\'\n});\n```\n\n---\n\n## Support\n\nFor API support and questions:\n- **Documentation**: https://docs.tigerex.com/api\n- **Support**: https://support.tigerex.com\n- **Discord**: https://discord.gg/tigerex\n- **Email**: api-support@tigerex.com\n\n---\n\n**Last Updated**: January 15, 2025\n**API Version**: 1.0.0\n</create-file>\n</function_calls>'}