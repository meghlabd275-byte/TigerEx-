{
  "backend_services": {
    "address-generation-service": {
      "name": "address-generation-service",
      "path": "/workspace/TigerEx/backend/address-generation-service",
      "main_files": [
        "/workspace/TigerEx/backend/address-generation-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/v1/addresses/validate",
        "DELETE /api/v1/addresses/{address_id}",
        "POST /api/v1/addresses/generate",
        "GET /api/v1/addresses/{address_id}",
        "GET /api/v1/addresses/stats/blockchain",
        "GET /api/v1/addresses/user/{user_id}"
      ],
      "features": [
        "deposit",
        "wallet",
        "address",
        "blockchain",
        "user",
        "token",
        "pair",
        "withdrawal",
        "p2p",
        "generation",
        "pool"
      ],
      "lines_of_code": 594,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "admin-panel": {
      "name": "admin-panel",
      "path": "/workspace/TigerEx/backend/admin-panel",
      "main_files": [
        "/workspace/TigerEx/backend/admin-panel/src/main.py"
      ],
      "endpoints": [
        "POST /api/v1/white-label/create",
        "POST /api/v1/auth/setup-2fa",
        "GET /api/v1/token-listings",
        "GET /api/v1/system/stats",
        "GET /api/v1/white-label",
        "POST /api/v1/blockchains/create",
        "POST /api/v1/users",
        "GET /api/v1/system/health",
        "POST /api/v1/kyc/review",
        "POST /api/v1/token-listings/review",
        "GET /api/v1/users",
        "GET /api/v1/kyc/applications",
        "POST /api/v1/auth/login",
        "GET /api/v1/blockchains"
      ],
      "features": [
        "listing",
        "admin",
        "kyc",
        "address",
        "blockchain",
        "user",
        "token",
        "pair",
        "trading",
        "evm"
      ],
      "lines_of_code": 889,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "admin-service": {
      "name": "admin-service",
      "path": "/workspace/TigerEx/backend/admin-service",
      "main_files": [
        "/workspace/TigerEx/backend/admin-service/main.js",
        "/workspace/TigerEx/backend/admin-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/v1/admin/kyc/:documentId/approve",
        "GET /api/v1/admin/dashboard/analytics",
        "POST /api/v1/admin/login",
        "POST /api/v1/admin/explorer/deploy",
        "GET /api/v1/admin/kyc/pending",
        "GET /api/v1/admin/users",
        "POST /api/v1/admin/blockchain/deploy",
        "POST /api/v1/admin/white-label/exchange",
        "POST /api/v1/admin/coins/list",
        "POST /api/v1/admin/ai-maintenance/enable",
        "GET /api/v1/admin/p2p/disputes",
        "POST /api/v1/admin/trading-pairs",
        "GET /health"
      ],
      "features": [
        "listing",
        "admin",
        "kyc",
        "wallet",
        "address",
        "blockchain",
        "user",
        "token",
        "pair",
        "trading",
        "p2p",
        "compliance",
        "pool",
        "iou",
        "admin"
      ],
      "lines_of_code": 863,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "advanced-trading-engine": {
      "name": "advanced-trading-engine",
      "path": "/workspace/TigerEx/backend/advanced-trading-engine",
      "main_files": [
        "/workspace/TigerEx/backend/advanced-trading-engine/src/main.cpp"
      ],
      "endpoints": [],
      "features": [
        "options",
        "user",
        "margin",
        "futures",
        "pair",
        "trading",
        "spot"
      ],
      "lines_of_code": 927,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "C++"
    },
    "advanced-trading-service": {
      "name": "advanced-trading-service",
      "path": "/workspace/TigerEx/backend/advanced-trading-service",
      "main_files": [
        "/workspace/TigerEx/backend/advanced-trading-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/analytics/overview",
        "POST /api/orders/vwap",
        "GET /api/orders/{order_id}",
        "POST /api/orders/twap"
      ],
      "features": [
        "user",
        "trading"
      ],
      "lines_of_code": 382,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "advanced-wallet-system": {
      "name": "advanced-wallet-system",
      "path": "/workspace/TigerEx/backend/advanced-wallet-system",
      "main_files": [
        "/workspace/TigerEx/backend/advanced-wallet-system/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/wallets/{wallet_id}",
        "POST /api/v1/wallets/create",
        "POST /api/v1/wallets/{wallet_id}/backup",
        "GET /api/v1/wallets/{wallet_id}/balance",
        "POST /api/v1/wallets/import",
        "GET /api/v1/wallets"
      ],
      "features": [
        "wallet",
        "address",
        "blockchain",
        "user",
        "token",
        "pair",
        "pool"
      ],
      "lines_of_code": 1098,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "affiliate-system": {
      "name": "affiliate-system",
      "path": "/workspace/TigerEx/backend/affiliate-system",
      "main_files": [
        "/workspace/TigerEx/backend/affiliate-system/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/v1/affiliate/payout",
        "POST /api/v1/affiliate/links",
        "GET /api/v1/affiliate/payouts",
        "POST /api/v1/affiliate/register",
        "GET /api/v1/affiliate/dashboard",
        "POST /api/v1/affiliate/refer/{referral_code}",
        "GET /api/v1/affiliate/links"
      ],
      "features": [
        "deposit",
        "admin",
        "kyc",
        "options",
        "address",
        "user",
        "token",
        "futures",
        "trading",
        "withdrawal",
        "spot",
        "p2p"
      ],
      "lines_of_code": 937,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "ai-maintenance-system": {
      "name": "ai-maintenance-system",
      "path": "/workspace/TigerEx/backend/ai-maintenance-system",
      "main_files": [
        "/workspace/TigerEx/backend/ai-maintenance-system/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /tasks",
        "POST /analyze/anomalies",
        "GET /alerts",
        "POST /optimize/performance",
        "POST /train/models",
        "GET /system/status",
        "POST /predict/performance",
        "POST /maintenance/tasks"
      ],
      "features": [
        "generation",
        "pool",
        "address"
      ],
      "lines_of_code": 689,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "ai-maintenance": {
      "name": "ai-maintenance",
      "path": "/workspace/TigerEx/backend/ai-maintenance",
      "main_files": [
        "/workspace/TigerEx/backend/ai-maintenance/src/main.py"
      ],
      "endpoints": [
        "GET /api/v1/ai/recommendations",
        "POST /api/v1/ai/recommendations/{task_id}/apply",
        "GET /api/v1/ai/tasks/{task_id}",
        "GET /api/v1/ai/metrics/current",
        "GET /api/v1/ai/tasks",
        "POST /api/v1/ai/tasks/create",
        "GET /api/v1/ai/health"
      ],
      "features": [
        "user",
        "virtual"
      ],
      "lines_of_code": 1160,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "ai-trading-assistant": {
      "name": "ai-trading-assistant",
      "path": "/workspace/TigerEx/backend/ai-trading-assistant",
      "main_files": [
        "/workspace/TigerEx/backend/ai-trading-assistant/src/main.py"
      ],
      "endpoints": [
        "POST /api/v1/strategy-recommendation",
        "POST /api/v1/market-analysis",
        "POST /api/v1/portfolio-optimization",
        "GET /",
        "POST /api/v1/query",
        "GET /api/v1/health"
      ],
      "features": [
        "pair",
        "user",
        "trading",
        "token"
      ],
      "lines_of_code": 713,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "algo-orders-service": {
      "name": "algo-orders-service",
      "path": "/workspace/TigerEx/backend/algo-orders-service",
      "main_files": [
        "/workspace/TigerEx/backend/algo-orders-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/features",
        "GET /api/info"
      ],
      "features": [],
      "lines_of_code": 84,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "alpha-market-admin": {
      "name": "alpha-market-admin",
      "path": "/workspace/TigerEx/backend/alpha-market-admin",
      "main_files": [
        "/workspace/TigerEx/backend/alpha-market-admin/src/main.py"
      ],
      "endpoints": [
        "GET /api/admin/subscriptions",
        "POST /api/admin/signals",
        "GET /api/admin/providers/{provider_id}",
        "GET /api/admin/strategies",
        "POST /api/admin/providers/{provider_id}/verify",
        "GET /api/admin/providers",
        "DELETE /api/admin/strategies/{strategy_id}",
        "GET /health",
        "PUT /api/admin/signals/{signal_id}/status",
        "GET /api/admin/strategies/{strategy_id}",
        "GET /api/admin/analytics/top-providers",
        "PUT /api/admin/strategies/{strategy_id}",
        "POST /api/admin/providers",
        "POST /api/admin/subscriptions",
        "GET /api/admin/analytics/overview",
        "PUT /api/admin/subscriptions/{subscription_id}/cancel",
        "POST /api/admin/strategies",
        "GET /api/admin/analytics/top-strategies",
        "PUT /api/admin/providers/{provider_id}",
        "GET /api/admin/signals"
      ],
      "features": [
        "kyc",
        "admin",
        "user",
        "pair",
        "trading"
      ],
      "lines_of_code": 748,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "alpha-market-trading": {
      "name": "alpha-market-trading",
      "path": "/workspace/TigerEx/backend/alpha-market-trading",
      "main_files": [
        "/workspace/TigerEx/backend/alpha-market-trading/src/server.js"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "trading",
        "token"
      ],
      "lines_of_code": 156,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "JavaScript"
    },
    "analytics-dashboard-service": {
      "name": "analytics-dashboard-service",
      "path": "/workspace/TigerEx/backend/analytics-dashboard-service",
      "main_files": [
        "/workspace/TigerEx/backend/analytics-dashboard-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/analytics/trading/volume",
        "GET /api/v1/analytics/security/events",
        "GET /api/v1/analytics/kyc/stats",
        "GET /api/v1/analytics/platform/overview",
        "GET /api/v1/analytics/system/health",
        "GET /api/v1/analytics/users/top-traders",
        "GET /api/v1/analytics/trading/pairs",
        "POST /api/v1/analytics/aggregate/daily",
        "GET /api/v1/analytics/deposits-withdrawals",
        "GET /api/v1/analytics/revenue",
        "GET /api/v1/analytics/users/growth"
      ],
      "features": [
        "deposit",
        "admin",
        "kyc",
        "wallet",
        "user",
        "pair",
        "withdrawal",
        "trading",
        "pool",
        "iou"
      ],
      "lines_of_code": 535,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "analytics-service": {
      "name": "analytics-service",
      "path": "/workspace/TigerEx/backend/analytics-service",
      "main_files": [
        "/workspace/TigerEx/backend/analytics-service/main.go",
        "/workspace/TigerEx/backend/analytics-service/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "deposit",
        "kyc",
        "options",
        "address",
        "user",
        "liquidity",
        "margin",
        "token",
        "trading",
        "withdrawal",
        "p2p"
      ],
      "lines_of_code": 688,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "api-gateway": {
      "name": "api-gateway",
      "path": "/workspace/TigerEx/backend/api-gateway",
      "main_files": [
        "/workspace/TigerEx/backend/api-gateway/main.go"
      ],
      "endpoints": [],
      "features": [
        "deposit",
        "admin",
        "options",
        "address",
        "user",
        "margin",
        "token",
        "staking",
        "futures",
        "pair",
        "trading",
        "withdrawal"
      ],
      "lines_of_code": 906,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Go"
    },
    "auth-service": {
      "name": "auth-service",
      "path": "/workspace/TigerEx/backend/auth-service",
      "main_files": [
        "/workspace/TigerEx/backend/auth-service/main.go",
        "/workspace/TigerEx/backend/auth-service/src/main.py",
        "/workspace/TigerEx/backend/auth-service/src/server.js"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/auth/oauth/{provider}",
        "GET /api/v1/auth/captcha",
        "POST /api/v1/auth/2fa/setup",
        "POST /api/v1/auth/2fa/disable",
        "GET /api/v1/auth/me",
        "GET /api/v1/auth/oauth/{provider}/callback",
        "POST /api/v1/auth/2fa/verify",
        "POST /api/v1/auth/register",
        "POST /api/v1/auth/login",
        "POST /api/v1/auth/logout",
        "GET /health"
      ],
      "features": [
        "user",
        "kyc",
        "admin",
        "user",
        "token",
        "address",
        "admin",
        "user",
        "token"
      ],
      "lines_of_code": 1255,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "JavaScript"
    },
    "auto-invest-service": {
      "name": "auto-invest-service",
      "path": "/workspace/TigerEx/backend/auto-invest-service",
      "main_files": [
        "/workspace/TigerEx/backend/auto-invest-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /plans/{user_id}/{plan_id}/execute",
        "POST /plans",
        "GET /plans/{user_id}/{plan_id}",
        "POST /plans/{user_id}/{plan_id}/pause",
        "POST /plans/{user_id}/{plan_id}/resume",
        "GET /supported-assets",
        "GET /portfolio/{user_id}",
        "DELETE /plans/{user_id}/{plan_id}",
        "PUT /plans/{user_id}/{plan_id}",
        "GET /analytics/{user_id}",
        "GET /orders/{user_id}",
        "GET /plans/{user_id}"
      ],
      "features": [
        "user"
      ],
      "lines_of_code": 436,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "block-explorer": {
      "name": "block-explorer",
      "path": "/workspace/TigerEx/backend/block-explorer",
      "main_files": [
        "/workspace/TigerEx/backend/block-explorer/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "PUT /explorers/{explorer_id}",
        "GET /explorers/{explorer_id}",
        "GET /templates",
        "GET /",
        "GET /explorers/{explorer_id}/logs",
        "DELETE /explorers/{explorer_id}",
        "POST /explorers",
        "GET /explorers",
        "POST /explorers/{explorer_id}/stop",
        "POST /explorers/{explorer_id}/start"
      ],
      "features": [
        "address",
        "blockchain",
        "user",
        "token",
        "evm",
        "pool",
        "aml"
      ],
      "lines_of_code": 1074,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "block-trading-service": {
      "name": "block-trading-service",
      "path": "/workspace/TigerEx/backend/block-trading-service",
      "main_files": [
        "/workspace/TigerEx/backend/block-trading-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/features",
        "GET /api/info"
      ],
      "features": [
        "trading"
      ],
      "lines_of_code": 84,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "blockchain-integration-service": {
      "name": "blockchain-integration-service",
      "path": "/workspace/TigerEx/backend/blockchain-integration-service",
      "main_files": [
        "/workspace/TigerEx/backend/blockchain-integration-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/admin/tokens",
        "POST /api/admin/tokens/create",
        "POST /api/admin/trading-pairs/create",
        "POST /api/admin/deposit-addresses/generate"
      ],
      "features": [
        "deposit",
        "non-evm",
        "admin",
        "address",
        "virtual",
        "blockchain",
        "user",
        "liquidity",
        "token",
        "pair",
        "trading",
        "evm",
        "generation",
        "pool"
      ],
      "lines_of_code": 580,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "blockchain-service": {
      "name": "blockchain-service",
      "path": "/workspace/TigerEx/backend/blockchain-service",
      "main_files": [
        "/workspace/TigerEx/backend/blockchain-service/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "blockchain"
      ],
      "lines_of_code": 22,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "compliance-engine": {
      "name": "compliance-engine",
      "path": "/workspace/TigerEx/backend/compliance-engine",
      "main_files": [
        "/workspace/TigerEx/backend/compliance-engine/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/v1/kyc/applications",
        "POST /api/v1/kyc/applications/{application_id}/documents",
        "POST /api/v1/compliance/reports",
        "GET /api/v1/aml/alerts",
        "GET /api/v1/kyc/applications/{application_id}"
      ],
      "features": [
        "deposit",
        "kyc",
        "address",
        "iou",
        "user",
        "token",
        "withdrawal",
        "compliance",
        "aml"
      ],
      "lines_of_code": 602,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "comprehensive-admin-service": {
      "name": "comprehensive-admin-service",
      "path": "/workspace/TigerEx/backend/comprehensive-admin-service",
      "main_files": [
        "/workspace/TigerEx/backend/comprehensive-admin-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/admin/tokens/list",
        "GET /api/admin/tokens",
        "GET /api/admin/virtual-reserves",
        "PATCH /api/admin/tokens/{token_symbol}",
        "POST /api/admin/liquidity-pools",
        "GET /api/admin/liquidity-pools",
        "DELETE /api/admin/tokens/{token_symbol}",
        "GET /api/admin/blockchains",
        "GET /api/admin/trading-pairs",
        "POST /api/admin/blockchains/evm",
        "GET /api/admin/iou-tokens",
        "GET /api/admin/analytics/overview",
        "POST /api/admin/trading-pairs",
        "POST /api/admin/blockchains/non-evm",
        "POST /api/admin/virtual-reserves/adjust",
        "PATCH /api/admin/iou-tokens/{iou_id}/enable-conversion",
        "GET /api/admin/activity-log"
      ],
      "features": [
        "non-evm",
        "listing",
        "admin",
        "options",
        "virtual",
        "address",
        "blockchain",
        "margin",
        "liquidity",
        "token",
        "futures",
        "pair",
        "trading",
        "spot",
        "evm",
        "pool",
        "iou"
      ],
      "lines_of_code": 966,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "convert-service": {
      "name": "convert-service",
      "path": "/workspace/TigerEx/backend/convert-service",
      "main_files": [
        "/workspace/TigerEx/backend/convert-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/convert/execute",
        "GET /api/convert/history/{user_id}",
        "GET /api/convert/pair/{from_currency}/{to_currency}",
        "GET /api/convert/statistics",
        "GET /api/convert/rate/{from_currency}/{to_currency}",
        "GET /api/convert/popular-pairs",
        "POST /api/convert/preview",
        "POST /api/convert/quote",
        "GET /api/convert/rates",
        "GET /api/convert/pairs"
      ],
      "features": [
        "user",
        "pair"
      ],
      "lines_of_code": 435,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "copy-trading-admin": {
      "name": "copy-trading-admin",
      "path": "/workspace/TigerEx/backend/copy-trading-admin",
      "main_files": [
        "/workspace/TigerEx/backend/copy-trading-admin/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/admin/traders/{trader_id}/verify",
        "POST /api/admin/followers",
        "GET /api/admin/traders/{trader_id}",
        "POST /api/admin/traders/{trader_id}/suspend",
        "POST /api/admin/traders",
        "GET /api/admin/copy-trades",
        "GET /api/admin/analytics/overview",
        "DELETE /api/admin/followers/{follower_id}",
        "PUT /api/admin/followers/{follower_id}",
        "GET /api/admin/traders",
        "GET /api/admin/followers",
        "PUT /api/admin/traders/{trader_id}",
        "GET /api/admin/analytics/trader-performance/{trader_id}",
        "GET /api/admin/analytics/leaderboard"
      ],
      "features": [
        "kyc",
        "user",
        "trading",
        "admin"
      ],
      "lines_of_code": 712,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "copy-trading-service": {
      "name": "copy-trading-service",
      "path": "/workspace/TigerEx/backend/copy-trading-service",
      "main_files": [
        "/workspace/TigerEx/backend/copy-trading-service/main.js",
        "/workspace/TigerEx/backend/copy-trading-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "PUT /api/v1/copy-trading/subscriptions/:subscriptionId",
        "POST /api/v1/copy-trading/apply-master",
        "DELETE /api/v1/copy-trading/subscriptions/:subscriptionId",
        "POST /api/v1/copy-trading/subscribe",
        "GET /api/v1/copy-trading/masters/:masterId",
        "GET /api/v1/copy-trading/subscriptions",
        "GET /api/v1/copy-trading/masters",
        "GET /api/v1/copy-trading/analytics",
        "GET /health"
      ],
      "features": [
        "admin",
        "kyc",
        "wallet",
        "user",
        "token",
        "pair",
        "trading",
        "pool",
        "trading"
      ],
      "lines_of_code": 878,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "copy-trading": {
      "name": "copy-trading",
      "path": "/workspace/TigerEx/backend/copy-trading",
      "main_files": [
        "/workspace/TigerEx/backend/copy-trading/src/main.py"
      ],
      "endpoints": [
        "POST /api/v1/copy",
        "GET /api/v1/copy/following",
        "GET /health",
        "POST /api/v1/traders",
        "POST /api/v1/social/posts",
        "GET /api/v1/traders/{trader_id}/performance",
        "GET /api/v1/traders",
        "POST /api/v1/trades"
      ],
      "features": [
        "user",
        "trading",
        "token"
      ],
      "lines_of_code": 613,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "crypto-card-service": {
      "name": "crypto-card-service",
      "path": "/workspace/TigerEx/backend/crypto-card-service",
      "main_files": [
        "/workspace/TigerEx/backend/crypto-card-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/features",
        "GET /api/info"
      ],
      "features": [],
      "lines_of_code": 84,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "database": {
      "name": "database",
      "path": "/workspace/TigerEx/backend/database",
      "main_files": [
        "/workspace/TigerEx/backend/database/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [],
      "lines_of_code": 22,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "dca-bot-service": {
      "name": "dca-bot-service",
      "path": "/workspace/TigerEx/backend/dca-bot-service",
      "main_files": [
        "/workspace/TigerEx/backend/dca-bot-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/info"
      ],
      "features": [],
      "lines_of_code": 64,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "defi-enhancements-service": {
      "name": "defi-enhancements-service",
      "path": "/workspace/TigerEx/backend/defi-enhancements-service",
      "main_files": [
        "/workspace/TigerEx/backend/defi-enhancements-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/dex-protocols",
        "GET /api/dex-protocols",
        "GET /api/analytics/overview"
      ],
      "features": [
        "address",
        "swap",
        "user",
        "liquidity",
        "token",
        "pool"
      ],
      "lines_of_code": 340,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "defi-service": {
      "name": "defi-service",
      "path": "/workspace/TigerEx/backend/defi-service",
      "main_files": [
        "/workspace/TigerEx/backend/defi-service/main.py",
        "/workspace/TigerEx/backend/defi-service/main.rs"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "address",
        "swap",
        "liquidity",
        "token",
        "futures",
        "trading",
        "pool"
      ],
      "lines_of_code": 508,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Rust"
    },
    "defi-staking-service": {
      "name": "defi-staking-service",
      "path": "/workspace/TigerEx/backend/defi-staking-service",
      "main_files": [
        "/workspace/TigerEx/backend/defi-staking-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/v1/staking",
        "GET /api/v1/apy/{protocol_name}",
        "POST /api/v1/liquidity-mining",
        "POST /api/v1/yield-farming",
        "GET /api/v1/performance/{user_id}",
        "GET /api/v1/positions/{user_id}",
        "GET /api/v1/protocols",
        "POST /api/v1/protocols"
      ],
      "features": [
        "address",
        "user",
        "liquidity",
        "swap",
        "token",
        "staking",
        "pool"
      ],
      "lines_of_code": 656,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "deposit-withdrawal-admin-service": {
      "name": "deposit-withdrawal-admin-service",
      "path": "/workspace/TigerEx/backend/deposit-withdrawal-admin-service",
      "main_files": [
        "/workspace/TigerEx/backend/deposit-withdrawal-admin-service/src/main.py"
      ],
      "endpoints": [
        "GET /api/admin/assets/{asset_symbol}/status",
        "POST /api/admin/assets/{asset_symbol}/maintenance/disable",
        "POST /api/admin/assets/bulk-action",
        "POST /api/admin/withdrawals/{withdrawal_id}/approve",
        "POST /api/admin/assets/{asset_symbol}/deposit/pause",
        "GET /api/admin/withdrawals/pending",
        "GET /api/admin/assets/status",
        "POST /api/admin/assets/{asset_symbol}/withdrawal/pause",
        "POST /api/admin/assets/{asset_symbol}/maintenance/enable",
        "PATCH /api/admin/assets/{asset_symbol}/deposit/settings",
        "GET /health",
        "POST /api/admin/assets/{asset_symbol}/withdrawal/disable",
        "POST /api/admin/assets/{asset_symbol}/deposit/enable",
        "POST /api/admin/assets/{asset_symbol}/deposit/disable",
        "GET /api/admin/activity-log",
        "POST /api/admin/assets/{asset_symbol}/withdrawal/enable",
        "POST /api/admin/assets/{asset_symbol}/deposit/resume",
        "GET /api/admin/analytics/overview",
        "POST /api/admin/assets/{asset_symbol}/withdrawal/resume",
        "PATCH /api/admin/assets/{asset_symbol}/withdrawal/settings"
      ],
      "features": [
        "deposit",
        "admin",
        "blockchain",
        "user",
        "token",
        "withdrawal",
        "pool",
        "iou"
      ],
      "lines_of_code": 1250,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "derivatives-engine": {
      "name": "derivatives-engine",
      "path": "/workspace/TigerEx/backend/derivatives-engine",
      "main_files": [
        "/workspace/TigerEx/backend/derivatives-engine/src/main.rs"
      ],
      "endpoints": [],
      "features": [
        "listing",
        "options",
        "user",
        "swap",
        "margin",
        "futures",
        "trading"
      ],
      "lines_of_code": 792,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Rust"
    },
    "dex-integration-admin": {
      "name": "dex-integration-admin",
      "path": "/workspace/TigerEx/backend/dex-integration-admin",
      "main_files": [
        "/workspace/TigerEx/backend/dex-integration-admin/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/admin/pools",
        "DELETE /api/admin/dex-integrations/{dex_id}",
        "POST /api/admin/dex-integrations",
        "GET /api/admin/pools/{pool_id}",
        "GET /api/admin/analytics/top-pools",
        "GET /api/admin/analytics/overview",
        "POST /api/admin/dex-integrations/{dex_id}/sync",
        "PUT /api/admin/dex-integrations/{dex_id}",
        "POST /api/admin/pools",
        "GET /api/admin/dex-integrations",
        "PUT /api/admin/pools/{pool_id}",
        "POST /api/admin/pools/{pool_id}/verify",
        "GET /api/admin/dex-integrations/{dex_id}",
        "POST /api/admin/routes/find-best"
      ],
      "features": [
        "admin",
        "address",
        "user",
        "liquidity",
        "swap",
        "token",
        "pair",
        "trading",
        "pool"
      ],
      "lines_of_code": 668,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "dex-integration": {
      "name": "dex-integration",
      "path": "/workspace/TigerEx/backend/dex-integration",
      "main_files": [
        "/workspace/TigerEx/backend/dex-integration/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [],
      "lines_of_code": 22,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "dual-investment-service": {
      "name": "dual-investment-service",
      "path": "/workspace/TigerEx/backend/dual-investment-service",
      "main_files": [
        "/workspace/TigerEx/backend/dual-investment-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/info"
      ],
      "features": [
        "generation"
      ],
      "lines_of_code": 64,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "earn-service": {
      "name": "earn-service",
      "path": "/workspace/TigerEx/backend/earn-service",
      "main_files": [
        "/workspace/TigerEx/backend/earn-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/info"
      ],
      "features": [
        "deposit"
      ],
      "lines_of_code": 64,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "enhanced-liquidity-aggregator": {
      "name": "enhanced-liquidity-aggregator",
      "path": "/workspace/TigerEx/backend/enhanced-liquidity-aggregator",
      "main_files": [
        "/workspace/TigerEx/backend/enhanced-liquidity-aggregator/src/main.rs"
      ],
      "endpoints": [],
      "features": [
        "options",
        "address",
        "blockchain",
        "margin",
        "liquidity",
        "token",
        "futures",
        "spot",
        "pool"
      ],
      "lines_of_code": 655,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Rust"
    },
    "enhanced-wallet-service": {
      "name": "enhanced-wallet-service",
      "path": "/workspace/TigerEx/backend/enhanced-wallet-service",
      "main_files": [
        "/workspace/TigerEx/backend/enhanced-wallet-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/v1/wallet/deposit",
        "POST /api/v1/wallet/withdraw",
        "GET /api/v1/wallet/transactions/{user_id}",
        "POST /api/v1/wallet/transfer",
        "GET /api/v1/wallet/balance/{user_id}",
        "GET /api/v1/wallet/withdrawals/{user_id}"
      ],
      "features": [
        "deposit",
        "wallet",
        "address",
        "blockchain",
        "user",
        "margin",
        "futures",
        "withdrawal",
        "spot",
        "pool"
      ],
      "lines_of_code": 791,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "etf-trading-admin": {
      "name": "etf-trading-admin",
      "path": "/workspace/TigerEx/backend/etf-trading-admin",
      "main_files": [
        "/workspace/TigerEx/backend/etf-trading-admin/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /admin/etf/performance/{etf_id}",
        "GET /admin/etf/products",
        "POST /admin/etf/products",
        "GET /admin/etf/products/{etf_id}",
        "PUT /admin/etf/products/{etf_id}",
        "GET /admin/etf/subscriptions",
        "POST /admin/etf/rebalance",
        "GET /admin/etf/statistics"
      ],
      "features": [
        "user",
        "trading",
        "admin"
      ],
      "lines_of_code": 517,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "etf-trading": {
      "name": "etf-trading",
      "path": "/workspace/TigerEx/backend/etf-trading",
      "main_files": [
        "/workspace/TigerEx/backend/etf-trading/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/etf/{symbol}/performance",
        "GET /api/v1/etf/categories",
        "GET /api/v1/etf/{symbol}",
        "POST /api/v1/etf/order",
        "GET /api/v1/etf/portfolio",
        "GET /api/v1/etf/list",
        "PUT /api/v1/etf/{symbol}/rebalance",
        "POST /api/v1/etf/create",
        "GET /api/v1/etf/{symbol}/holdings"
      ],
      "features": [
        "spot",
        "user",
        "trading",
        "token"
      ],
      "lines_of_code": 568,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "eth2-staking-service": {
      "name": "eth2-staking-service",
      "path": "/workspace/TigerEx/backend/eth2-staking-service",
      "main_files": [
        "/workspace/TigerEx/backend/eth2-staking-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/staking/apy",
        "POST /api/v1/staking/deposit",
        "POST /api/v1/staking/withdraw",
        "GET /api/v1/staking/stats",
        "POST /api/v1/staking/delegate",
        "GET /api/v1/staking/rewards/{user_id}",
        "GET /api/v1/staking/validators/{user_id}",
        "GET /api/v1/staking/performance/{user_id}"
      ],
      "features": [
        "deposit",
        "address",
        "user",
        "token",
        "staking",
        "withdrawal",
        "generation"
      ],
      "lines_of_code": 575,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "fiat-gateway-service": {
      "name": "fiat-gateway-service",
      "path": "/workspace/TigerEx/backend/fiat-gateway-service",
      "main_files": [
        "/workspace/TigerEx/backend/fiat-gateway-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/features",
        "GET /api/info"
      ],
      "features": [
        "kyc"
      ],
      "lines_of_code": 84,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "futures-earn-service": {
      "name": "futures-earn-service",
      "path": "/workspace/TigerEx/backend/futures-earn-service",
      "main_files": [
        "/workspace/TigerEx/backend/futures-earn-service/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "futures"
      ],
      "lines_of_code": 22,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "futures-trading": {
      "name": "futures-trading",
      "path": "/workspace/TigerEx/backend/futures-trading",
      "main_files": [
        "/workspace/TigerEx/backend/futures-trading/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /leverage",
        "GET /funding-rate/{symbol}",
        "GET /market-data/{symbol}",
        "GET /positions/{user_id}",
        "GET /contracts",
        "POST /positions/{user_id}/close",
        "GET /contracts/{symbol}",
        "POST /margin-type",
        "POST /orders",
        "GET /orders/{user_id}"
      ],
      "features": [
        "futures",
        "user",
        "trading",
        "margin"
      ],
      "lines_of_code": 497,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "grid-trading-bot-service": {
      "name": "grid-trading-bot-service",
      "path": "/workspace/TigerEx/backend/grid-trading-bot-service",
      "main_files": [
        "/workspace/TigerEx/backend/grid-trading-bot-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/info"
      ],
      "features": [
        "trading"
      ],
      "lines_of_code": 64,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "institutional-services-admin": {
      "name": "institutional-services-admin",
      "path": "/workspace/TigerEx/backend/institutional-services-admin",
      "main_files": [
        "/workspace/TigerEx/backend/institutional-services-admin/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/admin/analytics/overview",
        "PUT /api/admin/clients/{client_id}",
        "POST /api/admin/clients",
        "GET /api/admin/clients"
      ],
      "features": [
        "kyc",
        "trading",
        "admin",
        "aml"
      ],
      "lines_of_code": 265,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "institutional-services": {
      "name": "institutional-services",
      "path": "/workspace/TigerEx/backend/institutional-services",
      "main_files": [
        "/workspace/TigerEx/backend/institutional-services/src/main.py"
      ],
      "endpoints": [
        "POST /api/v1/custody/accounts",
        "POST /api/v1/reports/generate",
        "GET /api/v1/client/profile",
        "GET /api/v1/custody/accounts",
        "GET /health",
        "POST /api/v1/institutional/clients",
        "POST /api/v1/prime-brokerage/accounts",
        "GET /api/v1/reports",
        "GET /api/v1/otc/orders",
        "POST /api/v1/otc/quote",
        "POST /api/v1/otc/accept/{order_id}"
      ],
      "features": [
        "admin",
        "kyc",
        "options",
        "iou",
        "blockchain",
        "user",
        "liquidity",
        "margin",
        "token",
        "wallet",
        "address",
        "trading",
        "withdrawal",
        "compliance",
        "generation",
        "aml"
      ],
      "lines_of_code": 1187,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "institutional-trading": {
      "name": "institutional-trading",
      "path": "/workspace/TigerEx/backend/institutional-trading",
      "main_files": [
        "/workspace/TigerEx/backend/institutional-trading/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "trading"
      ],
      "lines_of_code": 22,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "insurance-fund-service": {
      "name": "insurance-fund-service",
      "path": "/workspace/TigerEx/backend/insurance-fund-service",
      "main_files": [
        "/workspace/TigerEx/backend/insurance-fund-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/info"
      ],
      "features": [],
      "lines_of_code": 64,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "kyc-aml-service": {
      "name": "kyc-aml-service",
      "path": "/workspace/TigerEx/backend/kyc-aml-service",
      "main_files": [
        "/workspace/TigerEx/backend/kyc-aml-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/aml/screen-transaction",
        "POST /api/aml/screen",
        "GET /api/admin/kyc/pending",
        "GET /api/kyc/status",
        "GET /api/admin/kyc/statistics",
        "GET /api/admin/compliance/alerts",
        "POST /api/kyc/upload-document",
        "POST /api/kyc/submit",
        "GET /api/admin/kyc/applications/{application_id}",
        "POST /api/admin/kyc/review/{application_id}"
      ],
      "features": [
        "admin",
        "kyc",
        "address",
        "iou",
        "blockchain",
        "user",
        "token",
        "compliance",
        "pool",
        "aml"
      ],
      "lines_of_code": 1115,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "kyc-service": {
      "name": "kyc-service",
      "path": "/workspace/TigerEx/backend/kyc-service",
      "main_files": [
        "/workspace/TigerEx/backend/kyc-service/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "kyc"
      ],
      "lines_of_code": 22,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "launchpad-service": {
      "name": "launchpad-service",
      "path": "/workspace/TigerEx/backend/launchpad-service",
      "main_files": [
        "/workspace/TigerEx/backend/launchpad-service/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [],
      "lines_of_code": 22,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "launchpool-service": {
      "name": "launchpool-service",
      "path": "/workspace/TigerEx/backend/launchpool-service",
      "main_files": [
        "/workspace/TigerEx/backend/launchpool-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/info"
      ],
      "features": [
        "pool",
        "token",
        "staking"
      ],
      "lines_of_code": 64,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "lending-borrowing-admin": {
      "name": "lending-borrowing-admin",
      "path": "/workspace/TigerEx/backend/lending-borrowing-admin",
      "main_files": [
        "/workspace/TigerEx/backend/lending-borrowing-admin/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/admin/pools",
        "GET /api/admin/analytics/overview",
        "POST /api/admin/pools",
        "PUT /api/admin/pools/{pool_id}"
      ],
      "features": [
        "user",
        "liquidity",
        "pool",
        "admin"
      ],
      "lines_of_code": 221,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "lending-borrowing": {
      "name": "lending-borrowing",
      "path": "/workspace/TigerEx/backend/lending-borrowing",
      "main_files": [
        "/workspace/TigerEx/backend/lending-borrowing/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [],
      "lines_of_code": 22,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "leveraged-tokens-service": {
      "name": "leveraged-tokens-service",
      "path": "/workspace/TigerEx/backend/leveraged-tokens-service",
      "main_files": [
        "/workspace/TigerEx/backend/leveraged-tokens-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/features",
        "GET /api/info"
      ],
      "features": [
        "token"
      ],
      "lines_of_code": 84,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "liquid-swap-service": {
      "name": "liquid-swap-service",
      "path": "/workspace/TigerEx/backend/liquid-swap-service",
      "main_files": [
        "/workspace/TigerEx/backend/liquid-swap-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/features",
        "GET /api/info"
      ],
      "features": [
        "swap",
        "liquidity",
        "pool"
      ],
      "lines_of_code": 84,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "liquidity-aggregator-admin": {
      "name": "liquidity-aggregator-admin",
      "path": "/workspace/TigerEx/backend/liquidity-aggregator-admin",
      "main_files": [
        "/workspace/TigerEx/backend/liquidity-aggregator-admin/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/admin/sources",
        "POST /api/admin/sources",
        "GET /api/admin/analytics/overview"
      ],
      "features": [
        "admin",
        "liquidity",
        "pool",
        "token"
      ],
      "lines_of_code": 168,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "liquidity-aggregator": {
      "name": "liquidity-aggregator",
      "path": "/workspace/TigerEx/backend/liquidity-aggregator",
      "main_files": [
        "/workspace/TigerEx/backend/liquidity-aggregator/src/main.rs"
      ],
      "endpoints": [],
      "features": [
        "address",
        "blockchain",
        "swap",
        "liquidity",
        "token",
        "futures",
        "spot",
        "pool",
        "iou"
      ],
      "lines_of_code": 1179,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Rust"
    },
    "margin-trading": {
      "name": "margin-trading",
      "path": "/workspace/TigerEx/backend/margin-trading",
      "main_files": [
        "/workspace/TigerEx/backend/margin-trading/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /pairs",
        "POST /accounts",
        "GET /pairs/{symbol}",
        "GET /accounts/{user_id}",
        "POST /borrow",
        "POST /repay",
        "GET /loans/{user_id}",
        "POST /transfer",
        "POST /orders",
        "GET /orders/{user_id}",
        "GET /interest-rate/{symbol}"
      ],
      "features": [
        "user",
        "margin",
        "pair",
        "trading",
        "spot"
      ],
      "lines_of_code": 534,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "market-data-service": {
      "name": "market-data-service",
      "path": "/workspace/TigerEx/backend/market-data-service",
      "main_files": [
        "/workspace/TigerEx/backend/market-data-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/market/orderbook/{pair}",
        "GET /api/v1/market/tickers",
        "GET /api/v1/market/trades/{pair}",
        "GET /api/v1/market/candlesticks/{pair}",
        "GET /api/v1/market/stats/{pair}",
        "GET /api/v1/market/ticker/{pair}"
      ],
      "features": [
        "pair",
        "user",
        "trading",
        "pool"
      ],
      "lines_of_code": 553,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "martingale-bot-service": {
      "name": "martingale-bot-service",
      "path": "/workspace/TigerEx/backend/martingale-bot-service",
      "main_files": [
        "/workspace/TigerEx/backend/martingale-bot-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/info"
      ],
      "features": [
        "trading"
      ],
      "lines_of_code": 64,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "matching-engine": {
      "name": "matching-engine",
      "path": "/workspace/TigerEx/backend/matching-engine",
      "main_files": [
        "/workspace/TigerEx/backend/matching-engine/src/main.cpp"
      ],
      "endpoints": [],
      "features": [
        "pair",
        "user",
        "trading",
        "options"
      ],
      "lines_of_code": 512,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "C++"
    },
    "nft-launchpad-service": {
      "name": "nft-launchpad-service",
      "path": "/workspace/TigerEx/backend/nft-launchpad-service",
      "main_files": [
        "/workspace/TigerEx/backend/nft-launchpad-service/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [],
      "lines_of_code": 22,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "nft-marketplace-admin": {
      "name": "nft-marketplace-admin",
      "path": "/workspace/TigerEx/backend/nft-marketplace-admin",
      "main_files": [
        "/workspace/TigerEx/backend/nft-marketplace-admin/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "PUT /api/admin/collections/{collection_id}",
        "POST /api/admin/collections/{collection_id}/verify",
        "GET /api/admin/analytics/overview",
        "GET /api/admin/collections",
        "POST /api/admin/collections"
      ],
      "features": [
        "admin",
        "listing",
        "token",
        "address"
      ],
      "lines_of_code": 257,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "nft-marketplace": {
      "name": "nft-marketplace",
      "path": "/workspace/TigerEx/backend/nft-marketplace",
      "main_files": [
        "/workspace/TigerEx/backend/nft-marketplace/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/collections",
        "POST /api/v1/listings",
        "GET /api/v1/nfts",
        "POST /api/v1/nfts/{nft_id}/mint",
        "POST /api/v1/nfts",
        "POST /api/v1/collections",
        "GET /api/v1/listings",
        "POST /api/v1/nfts/upload-image"
      ],
      "features": [
        "listing",
        "address",
        "blockchain",
        "user",
        "token",
        "trading"
      ],
      "lines_of_code": 502,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "notification-service-enhanced": {
      "name": "notification-service-enhanced",
      "path": "/workspace/TigerEx/backend/notification-service-enhanced",
      "main_files": [
        "/workspace/TigerEx/backend/notification-service-enhanced/main.py"
      ],
      "endpoints": [
        "GET /api/v1/notifications/stats/{user_id}",
        "GET /health",
        "GET /api/v1/notifications/preferences/{user_id}",
        "POST /api/v1/notifications/send",
        "PUT /api/v1/notifications/preferences/{user_id}",
        "GET /api/v1/notifications/user/{user_id}",
        "PUT /api/v1/notifications/{notification_id}/read",
        "PUT /api/v1/notifications/user/{user_id}/read-all"
      ],
      "features": [
        "deposit",
        "kyc",
        "address",
        "user",
        "pair",
        "withdrawal",
        "trading",
        "pool"
      ],
      "lines_of_code": 629,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "notification-service": {
      "name": "notification-service",
      "path": "/workspace/TigerEx/backend/notification-service",
      "main_files": [
        "/workspace/TigerEx/backend/notification-service/main.py",
        "/workspace/TigerEx/backend/notification-service/src/index.js",
        "/workspace/TigerEx/backend/notification-service/src/server.js"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/notifications/templates",
        "POST /api/v1/notifications/send",
        "GET /api/v1/notifications/preferences/{user_id}",
        "GET /api/v1/notifications/analytics",
        "POST /api/v1/notifications/templates",
        "PUT /api/v1/notifications/mark-all-read",
        "POST /api/v1/notifications/bulk",
        "PUT /api/v1/notifications/preferences/{user_id}",
        "GET /api/v1/notifications/user/{user_id}",
        "PUT /api/v1/notifications/{notification_id}/read",
        "GET /health",
        "PATCH /api/alerts/:id",
        "POST /api/push/subscribe",
        "POST /api/push/unsubscribe",
        "POST /api/notifications/send",
        "GET /api/alerts",
        "POST /api/alerts",
        "GET /api/notifications",
        "DELETE /api/alerts/:id",
        "GET /health",
        "POST /api/notifications/push",
        "POST /api/notifications/send",
        "POST /api/notifications/email",
        "POST /api/notifications/bulk",
        "POST /api/notifications/sms",
        "GET /api/notifications/templates"
      ],
      "features": [
        "deposit",
        "admin",
        "kyc",
        "address",
        "user",
        "margin",
        "token",
        "withdrawal",
        "p2p",
        "pool",
        "admin",
        "kyc",
        "user",
        "margin",
        "token",
        "trading",
        "pool",
        "iou",
        "deposit",
        "admin",
        "options",
        "user",
        "token",
        "pair",
        "withdrawal"
      ],
      "lines_of_code": 2238,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "JavaScript"
    },
    "options-trading-admin": {
      "name": "options-trading-admin",
      "path": "/workspace/TigerEx/backend/options-trading-admin",
      "main_files": [
        "/workspace/TigerEx/backend/options-trading-admin/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /admin/options/greeks/{contract_id}",
        "GET /admin/options/contracts",
        "POST /admin/options/settle/{contract_id}",
        "GET /admin/options/statistics",
        "GET /admin/options/positions",
        "POST /admin/options/contracts",
        "GET /admin/options/volatility-surface/{underlying_asset}"
      ],
      "features": [
        "options",
        "admin",
        "margin",
        "user",
        "trading"
      ],
      "lines_of_code": 551,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "options-trading": {
      "name": "options-trading",
      "path": "/workspace/TigerEx/backend/options-trading",
      "main_files": [
        "/workspace/TigerEx/backend/options-trading/src/main.cpp"
      ],
      "endpoints": [],
      "features": [
        "spot",
        "trading",
        "options"
      ],
      "lines_of_code": 335,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "C++"
    },
    "p2p-admin": {
      "name": "p2p-admin",
      "path": "/workspace/TigerEx/backend/p2p-admin",
      "main_files": [
        "/workspace/TigerEx/backend/p2p-admin/src/main.py"
      ],
      "endpoints": [
        "POST /api/v1/p2p-admin/settings",
        "GET /health",
        "GET /api/v1/p2p-admin/trades",
        "GET /api/v1/p2p-admin/payment-methods",
        "GET /api/v1/p2p-admin/settings",
        "POST /api/v1/p2p-admin/disputes/{dispute_id}/resolve",
        "GET /api/v1/p2p-admin/dashboard",
        "GET /api/v1/p2p-admin/users",
        "POST /api/v1/p2p-admin/users/{user_id}/action",
        "GET /api/v1/p2p-admin/orders",
        "GET /api/v1/p2p-admin/analytics/chart",
        "GET /api/v1/p2p-admin/disputes",
        "GET /api/v1/p2p-admin/admin-actions"
      ],
      "features": [
        "admin",
        "user",
        "token",
        "trading",
        "p2p",
        "iou"
      ],
      "lines_of_code": 937,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "p2p-service": {
      "name": "p2p-service",
      "path": "/workspace/TigerEx/backend/p2p-service",
      "main_files": [
        "/workspace/TigerEx/backend/p2p-service/main.go",
        "/workspace/TigerEx/backend/p2p-service/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "wallet",
        "options",
        "admin",
        "user",
        "p2p",
        "p2p"
      ],
      "lines_of_code": 993,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "p2p-trading": {
      "name": "p2p-trading",
      "path": "/workspace/TigerEx/backend/p2p-trading",
      "main_files": [
        "/workspace/TigerEx/backend/p2p-trading/src/main.py"
      ],
      "endpoints": [
        "POST /api/v1/p2p/trades/{trade_id}/dispute",
        "POST /api/v1/p2p/payment-methods",
        "GET /health",
        "POST /api/v1/p2p/orders",
        "GET /api/v1/p2p/payment-methods",
        "POST /api/v1/p2p/trades/{trade_id}/confirm-payment",
        "POST /api/v1/p2p/trades/{trade_id}/release",
        "POST /api/v1/p2p/trades",
        "GET /api/v1/p2p/orders",
        "GET /api/v1/p2p/trades"
      ],
      "features": [
        "admin",
        "address",
        "user",
        "token",
        "trading",
        "p2p"
      ],
      "lines_of_code": 993,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "payment-gateway-admin": {
      "name": "payment-gateway-admin",
      "path": "/workspace/TigerEx/backend/payment-gateway-admin",
      "main_files": [
        "/workspace/TigerEx/backend/payment-gateway-admin/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/admin/analytics/overview",
        "GET /api/admin/providers",
        "PUT /api/admin/providers/{provider_id}",
        "GET /api/admin/transactions",
        "POST /api/admin/providers"
      ],
      "features": [
        "deposit",
        "admin",
        "wallet",
        "user",
        "withdrawal"
      ],
      "lines_of_code": 319,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "payment-gateway-service": {
      "name": "payment-gateway-service",
      "path": "/workspace/TigerEx/backend/payment-gateway-service",
      "main_files": [
        "/workspace/TigerEx/backend/payment-gateway-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/providers",
        "DELETE /api/payment-methods/{method_id}",
        "GET /api/analytics/overview",
        "GET /api/deposits/{transaction_id}",
        "POST /api/deposits",
        "GET /api/payment-methods/{user_id}",
        "POST /api/webhooks/{provider}",
        "POST /api/payment-methods",
        "POST /api/withdrawals",
        "POST /api/refunds"
      ],
      "features": [
        "deposit",
        "wallet",
        "user",
        "token",
        "withdrawal"
      ],
      "lines_of_code": 656,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "payment-gateway": {
      "name": "payment-gateway",
      "path": "/workspace/TigerEx/backend/payment-gateway",
      "main_files": [
        "/workspace/TigerEx/backend/payment-gateway/src/main.py",
        "/workspace/TigerEx/backend/payment-gateway/src/server.js"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/v1/payments/webhooks/{provider}",
        "POST /api/v1/payments/confirm",
        "GET /api/v1/payments/transactions",
        "POST /api/v1/payments/methods",
        "GET /api/v1/payments/methods",
        "POST /api/v1/payments/intent",
        "POST /api/v1/payments/withdraw",
        "GET /health"
      ],
      "features": [
        "deposit",
        "address",
        "user",
        "token",
        "withdrawal",
        "compliance",
        "iou",
        "deposit",
        "kyc",
        "address",
        "withdrawal",
        "compliance"
      ],
      "lines_of_code": 1313,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "JavaScript"
    },
    "perpetual-swap-service": {
      "name": "perpetual-swap-service",
      "path": "/workspace/TigerEx/backend/perpetual-swap-service",
      "main_files": [
        "/workspace/TigerEx/backend/perpetual-swap-service/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "swap"
      ],
      "lines_of_code": 22,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "popular-coins-service": {
      "name": "popular-coins-service",
      "path": "/workspace/TigerEx/backend/popular-coins-service",
      "main_files": [
        "/workspace/TigerEx/backend/popular-coins-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/prices",
        "GET /api/v1/coins",
        "POST /api/v1/trading-pairs/create",
        "GET /api/v1/trading-pairs",
        "GET /api/v1/prices/{symbol}",
        "POST /api/v1/coins/add",
        "POST /api/v1/coins/initialize-popular"
      ],
      "features": [
        "listing",
        "options",
        "address",
        "blockchain",
        "swap",
        "margin",
        "token",
        "futures",
        "pair",
        "trading",
        "spot",
        "pool"
      ],
      "lines_of_code": 1123,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "portfolio-margin-service": {
      "name": "portfolio-margin-service",
      "path": "/workspace/TigerEx/backend/portfolio-margin-service",
      "main_files": [
        "/workspace/TigerEx/backend/portfolio-margin-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/info"
      ],
      "features": [
        "margin"
      ],
      "lines_of_code": 64,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "proof-of-reserves-service": {
      "name": "proof-of-reserves-service",
      "path": "/workspace/TigerEx/backend/proof-of-reserves-service",
      "main_files": [
        "/workspace/TigerEx/backend/proof-of-reserves-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/info"
      ],
      "features": [],
      "lines_of_code": 64,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "referral-program-service": {
      "name": "referral-program-service",
      "path": "/workspace/TigerEx/backend/referral-program-service",
      "main_files": [
        "/workspace/TigerEx/backend/referral-program-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/info"
      ],
      "features": [],
      "lines_of_code": 64,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "risk-management-service": {
      "name": "risk-management-service",
      "path": "/workspace/TigerEx/backend/risk-management-service",
      "main_files": [
        "/workspace/TigerEx/backend/risk-management-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/risk/profile/{user_id}",
        "GET /api/v1/risk/alerts",
        "POST /api/v1/risk/assess/user",
        "PUT /api/v1/risk/alerts/{alert_id}/resolve",
        "POST /api/v1/risk/block",
        "GET /api/v1/risk/rules",
        "GET /api/v1/risk/stats",
        "POST /api/v1/risk/check/transaction"
      ],
      "features": [
        "deposit",
        "admin",
        "kyc",
        "address",
        "user",
        "trading",
        "withdrawal",
        "compliance",
        "pool",
        "iou"
      ],
      "lines_of_code": 634,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "risk-management": {
      "name": "risk-management",
      "path": "/workspace/TigerEx/backend/risk-management",
      "main_files": [
        "/workspace/TigerEx/backend/risk-management/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /validate-order",
        "GET /positions/{user_id}",
        "GET /risk-limits/{user_id}",
        "GET /var/{user_id}",
        "GET /system/exposure"
      ],
      "features": [
        "user",
        "margin",
        "futures",
        "trading",
        "withdrawal",
        "compliance",
        "pool"
      ],
      "lines_of_code": 744,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "role-based-admin": {
      "name": "role-based-admin",
      "path": "/workspace/TigerEx/backend/role-based-admin",
      "main_files": [
        "/workspace/TigerEx/backend/role-based-admin/src/main.py"
      ],
      "endpoints": [
        "POST /api/v1/admin/support/tickets/{ticket_id}/assign",
        "POST /api/v1/admin/kyc/applications/{application_id}/review",
        "GET /health",
        "POST /api/v1/admin/support/tickets/{ticket_id}/resolve",
        "GET /api/v1/admin/listings",
        "GET /api/v1/admin/affiliates",
        "GET /api/v1/admin/support/tickets",
        "POST /api/v1/admin/affiliates/{partner_id}/approve",
        "GET /api/v1/admin/kyc/applications",
        "GET /api/v1/admin/dashboard"
      ],
      "features": [
        "listing",
        "admin",
        "kyc",
        "address",
        "blockchain",
        "user",
        "token",
        "trading",
        "p2p",
        "compliance"
      ],
      "lines_of_code": 887,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "social-trading-service": {
      "name": "social-trading-service",
      "path": "/workspace/TigerEx/backend/social-trading-service",
      "main_files": [
        "/workspace/TigerEx/backend/social-trading-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/features",
        "GET /api/info"
      ],
      "features": [
        "trading"
      ],
      "lines_of_code": 84,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "spot-trading": {
      "name": "spot-trading",
      "path": "/workspace/TigerEx/backend/spot-trading",
      "main_files": [
        "/workspace/TigerEx/backend/spot-trading/src/main.rs",
        "/workspace/TigerEx/backend/spot-trading/src/server.js"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "pair",
        "trading",
        "pool",
        "spot",
        "trading",
        "spot"
      ],
      "lines_of_code": 312,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "JavaScript"
    },
    "spread-arbitrage-bot": {
      "name": "spread-arbitrage-bot",
      "path": "/workspace/TigerEx/backend/spread-arbitrage-bot",
      "main_files": [
        "/workspace/TigerEx/backend/spread-arbitrage-bot/src/main.rs"
      ],
      "endpoints": [],
      "features": [
        "pair",
        "trading"
      ],
      "lines_of_code": 663,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Rust"
    },
    "staking-service": {
      "name": "staking-service",
      "path": "/workspace/TigerEx/backend/staking-service",
      "main_files": [
        "/workspace/TigerEx/backend/staking-service/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "staking"
      ],
      "lines_of_code": 22,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "sub-accounts-service": {
      "name": "sub-accounts-service",
      "path": "/workspace/TigerEx/backend/sub-accounts-service",
      "main_files": [
        "/workspace/TigerEx/backend/sub-accounts-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/features",
        "GET /api/info"
      ],
      "features": [],
      "lines_of_code": 84,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "super-admin-system": {
      "name": "super-admin-system",
      "path": "/workspace/TigerEx/backend/super-admin-system",
      "main_files": [
        "/workspace/TigerEx/backend/super-admin-system/src/main.py"
      ],
      "endpoints": [
        "GET /api/v1/super-admin/dashboard",
        "GET /health",
        "POST /api/v1/super-admin/dex/create",
        "GET /api/v1/super-admin/blockchains",
        "GET /api/v1/super-admin/exchanges",
        "POST /api/v1/super-admin/exchange/create",
        "POST /api/v1/super-admin/blockchain/create"
      ],
      "features": [
        "listing",
        "admin",
        "kyc",
        "wallet",
        "address",
        "blockchain",
        "user",
        "swap",
        "token",
        "pair",
        "trading",
        "evm",
        "p2p",
        "compliance"
      ],
      "lines_of_code": 934,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "system-configuration-service": {
      "name": "system-configuration-service",
      "path": "/workspace/TigerEx/backend/system-configuration-service",
      "main_files": [
        "/workspace/TigerEx/backend/system-configuration-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/config/all",
        "POST /api/v1/config/fees/trading",
        "GET /api/v1/config/fees/trading/{pair}",
        "GET /api/v1/config/changelog",
        "PUT /api/v1/config/update",
        "GET /api/v1/config/maintenance/current",
        "POST /api/v1/config/fees/withdrawal",
        "GET /api/v1/config/blockchain",
        "GET /api/v1/config/{category}/{key}",
        "POST /api/v1/config/blockchain",
        "GET /api/v1/config/fees/withdrawal/{currency}",
        "POST /api/v1/config/maintenance"
      ],
      "features": [
        "deposit",
        "admin",
        "blockchain",
        "user",
        "pair",
        "withdrawal",
        "trading",
        "pool"
      ],
      "lines_of_code": 632,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "token-listing-service": {
      "name": "token-listing-service",
      "path": "/workspace/TigerEx/backend/token-listing-service",
      "main_files": [
        "/workspace/TigerEx/backend/token-listing-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/liquidity/pools",
        "GET /api/v1/blockchains/supported",
        "POST /api/v1/admin/reject-listing/{application_id}",
        "POST /api/v1/tokens/validate-contract",
        "GET /api/v1/tokens/applications",
        "POST /api/v1/tokens/submit-listing",
        "GET /api/v1/liquidity/shared/{symbol}",
        "POST /api/v1/liquidity/provide",
        "POST /api/v1/admin/approve-listing/{application_id}",
        "POST /api/v1/blockchains/add-custom-evm",
        "GET /api/v1/tokens/applications/{application_id}",
        "GET /api/v1/tokens/listed"
      ],
      "features": [
        "listing",
        "admin",
        "kyc",
        "address",
        "blockchain",
        "user",
        "liquidity",
        "swap",
        "token",
        "margin",
        "futures",
        "pair",
        "trading",
        "spot",
        "evm",
        "compliance",
        "pool",
        "iou"
      ],
      "lines_of_code": 1067,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "trading-bots-service": {
      "name": "trading-bots-service",
      "path": "/workspace/TigerEx/backend/trading-bots-service",
      "main_files": [
        "/workspace/TigerEx/backend/trading-bots-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /bots/{bot_id}/start",
        "GET /bots",
        "POST /bots/{bot_id}/stop",
        "POST /bots"
      ],
      "features": [
        "pair",
        "user",
        "trading"
      ],
      "lines_of_code": 347,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "trading-engine-enhanced": {
      "name": "trading-engine-enhanced",
      "path": "/workspace/TigerEx/backend/trading-engine-enhanced",
      "main_files": [
        "/workspace/TigerEx/backend/trading-engine-enhanced/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/trading/orderbook/{pair}",
        "POST /api/v1/trading/order",
        "DELETE /api/v1/trading/order/{order_id}",
        "GET /api/v1/trading/orders/{user_id}",
        "GET /api/v1/trading/ticker/{pair}",
        "GET /api/v1/trading/trades/{pair}"
      ],
      "features": [
        "pair",
        "user",
        "trading",
        "pool"
      ],
      "lines_of_code": 660,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "trading-engine": {
      "name": "trading-engine",
      "path": "/workspace/TigerEx/backend/trading-engine",
      "main_files": [
        "/workspace/TigerEx/backend/trading-engine/main.cpp"
      ],
      "endpoints": [],
      "features": [
        "trading"
      ],
      "lines_of_code": 201,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "C++"
    },
    "trading-pair-management": {
      "name": "trading-pair-management",
      "path": "/workspace/TigerEx/backend/trading-pair-management",
      "main_files": [
        "/workspace/TigerEx/backend/trading-pair-management/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/v1/trading-pairs",
        "GET /api/v1/trading-pairs",
        "DELETE /api/v1/trading-pairs/{symbol}",
        "GET /api/v1/trading-types",
        "GET /api/v1/supported-assets",
        "GET /api/v1/trading-pairs/{symbol}",
        "PUT /api/v1/trading-pairs/{symbol}"
      ],
      "features": [
        "options",
        "margin",
        "futures",
        "pair",
        "trading",
        "spot",
        "generation"
      ],
      "lines_of_code": 533,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "trading-signals-service": {
      "name": "trading-signals-service",
      "path": "/workspace/TigerEx/backend/trading-signals-service",
      "main_files": [
        "/workspace/TigerEx/backend/trading-signals-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/features",
        "GET /api/info"
      ],
      "features": [
        "trading"
      ],
      "lines_of_code": 84,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "trading": {
      "name": "trading",
      "path": "/workspace/TigerEx/backend/trading",
      "main_files": [
        "/workspace/TigerEx/backend/trading/main.py",
        "/workspace/TigerEx/backend/trading/futures-trading/usd-m/src/main.cpp"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "trading",
        "wallet",
        "user",
        "margin",
        "futures",
        "trading",
        "spot"
      ],
      "lines_of_code": 604,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "C++"
    },
    "transaction-engine": {
      "name": "transaction-engine",
      "path": "/workspace/TigerEx/backend/transaction-engine",
      "main_files": [
        "/workspace/TigerEx/backend/transaction-engine/src/main.rs"
      ],
      "endpoints": [],
      "features": [
        "deposit",
        "address",
        "blockchain",
        "user",
        "staking",
        "withdrawal",
        "pool"
      ],
      "lines_of_code": 718,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Rust"
    },
    "unified-account-service": {
      "name": "unified-account-service",
      "path": "/workspace/TigerEx/backend/unified-account-service",
      "main_files": [
        "/workspace/TigerEx/backend/unified-account-service/main.py"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [],
      "lines_of_code": 22,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "user-authentication-service": {
      "name": "user-authentication-service",
      "path": "/workspace/TigerEx/backend/user-authentication-service",
      "main_files": [
        "/workspace/TigerEx/backend/user-authentication-service/src/main.py"
      ],
      "endpoints": [
        "DELETE /api/auth/api-keys/{key_id}",
        "POST /api/auth/2fa/enable",
        "POST /api/auth/logout",
        "GET /api/auth/me",
        "POST /api/auth/2fa/verify",
        "POST /api/auth/password-reset/confirm",
        "GET /api/auth/sessions",
        "POST /api/auth/refresh",
        "POST /api/auth/2fa/disable",
        "POST /api/auth/register",
        "GET /health",
        "POST /api/auth/api-keys",
        "GET /api/auth/login-history",
        "GET /api/auth/api-keys",
        "POST /api/auth/password-reset",
        "POST /api/auth/verify-email",
        "POST /api/auth/change-password",
        "DELETE /api/auth/sessions/{session_id}",
        "POST /api/auth/login"
      ],
      "features": [
        "kyc",
        "address",
        "user",
        "token",
        "pool"
      ],
      "lines_of_code": 1277,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "user-management-admin-service": {
      "name": "user-management-admin-service",
      "path": "/workspace/TigerEx/backend/user-management-admin-service",
      "main_files": [
        "/workspace/TigerEx/backend/user-management-admin-service/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/admin/users/{user_id}",
        "POST /api/v1/admin/users/search",
        "PUT /api/v1/admin/users/limits",
        "POST /api/v1/admin/users/action",
        "GET /api/v1/admin/users/stats",
        "GET /api/v1/admin/users/{user_id}/notes",
        "PUT /api/v1/admin/users/update",
        "POST /api/v1/admin/users/note",
        "GET /api/v1/admin/users/{user_id}/activity"
      ],
      "features": [
        "admin",
        "kyc",
        "address",
        "user",
        "trading",
        "withdrawal",
        "pool"
      ],
      "lines_of_code": 701,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "vip-program-service": {
      "name": "vip-program-service",
      "path": "/workspace/TigerEx/backend/vip-program-service",
      "main_files": [
        "/workspace/TigerEx/backend/vip-program-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/vip/trading-volume",
        "GET /api/vip/leaderboard",
        "GET /api/vip/statistics",
        "GET /api/vip/benefits/{tier}",
        "GET /api/vip/fees/{user_id}",
        "GET /api/vip/status/{user_id}",
        "GET /api/vip/tiers",
        "POST /api/vip/rewards",
        "POST /api/vip/rewards/{reward_id}/claim",
        "POST /api/vip/tiger-balance",
        "GET /api/vip/rewards/{user_id}"
      ],
      "features": [
        "user",
        "liquidity",
        "token",
        "trading",
        "withdrawal"
      ],
      "lines_of_code": 479,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "virtual-liquidity-service": {
      "name": "virtual-liquidity-service",
      "path": "/workspace/TigerEx/backend/virtual-liquidity-service",
      "main_files": [
        "/workspace/TigerEx/backend/virtual-liquidity-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/reserves",
        "GET /api/analytics/overview",
        "GET /api/pools/{pool_id}",
        "GET /api/iou-tokens/{iou_id}",
        "POST /api/reserves",
        "POST /api/reserves/{reserve_id}/rebalance",
        "POST /api/pools",
        "GET /api/iou-tokens",
        "GET /api/allocations",
        "POST /api/allocations",
        "GET /api/pools",
        "GET /api/reserves/{reserve_id}",
        "GET /api/analytics/reserves/{reserve_id}/performance",
        "POST /api/iou-tokens",
        "PATCH /api/reserves/{reserve_id}"
      ],
      "features": [
        "admin",
        "virtual",
        "liquidity",
        "token",
        "pair",
        "trading",
        "pool",
        "iou"
      ],
      "lines_of_code": 865,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "vote-to-list-service": {
      "name": "vote-to-list-service",
      "path": "/workspace/TigerEx/backend/vote-to-list-service",
      "main_files": [
        "/workspace/TigerEx/backend/vote-to-list-service/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/status",
        "GET /api/features",
        "GET /api/info"
      ],
      "features": [
        "listing",
        "token"
      ],
      "lines_of_code": 84,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "wallet-management": {
      "name": "wallet-management",
      "path": "/workspace/TigerEx/backend/wallet-management",
      "main_files": [
        "/workspace/TigerEx/backend/wallet-management/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "POST /api/v1/wallets/{wallet_id}/send",
        "POST /api/v1/wallets/create",
        "GET /api/v1/wallets/{wallet_id}/transactions",
        "GET /api/v1/wallets/{wallet_id}/balance",
        "POST /api/v1/wallets/import",
        "GET /api/v1/wallets"
      ],
      "features": [
        "deposit",
        "wallet",
        "address",
        "blockchain",
        "user",
        "token",
        "withdrawal",
        "p2p"
      ],
      "lines_of_code": 931,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    },
    "wallet-service": {
      "name": "wallet-service",
      "path": "/workspace/TigerEx/backend/wallet-service",
      "main_files": [
        "/workspace/TigerEx/backend/wallet-service/main.go",
        "/workspace/TigerEx/backend/wallet-service/src/server.js"
      ],
      "endpoints": [
        "GET /health"
      ],
      "features": [
        "deposit",
        "options",
        "wallet",
        "address",
        "blockchain",
        "user",
        "pair",
        "trading",
        "withdrawal",
        "generation",
        "deposit",
        "wallet",
        "address",
        "blockchain",
        "withdrawal"
      ],
      "lines_of_code": 843,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "JavaScript"
    },
    "web3-integration": {
      "name": "web3-integration",
      "path": "/workspace/TigerEx/backend/web3-integration",
      "main_files": [
        "/workspace/TigerEx/backend/web3-integration/src/main.go"
      ],
      "endpoints": [],
      "features": [
        "options",
        "address",
        "blockchain",
        "user",
        "liquidity",
        "swap",
        "token",
        "pool"
      ],
      "lines_of_code": 1242,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Go"
    },
    "white-label-system": {
      "name": "white-label-system",
      "path": "/workspace/TigerEx/backend/white-label-system",
      "main_files": [
        "/workspace/TigerEx/backend/white-label-system/src/main.py"
      ],
      "endpoints": [
        "GET /health",
        "GET /api/v1/deployment/{deployment_id}/logs",
        "GET /api/v1/deployment/{deployment_id}/status",
        "POST /api/v1/white-label/exchange/create",
        "DELETE /api/v1/deployment/{deployment_id}",
        "POST /api/v1/blockchain/create",
        "POST /api/v1/white-label/wallet/create"
      ],
      "features": [
        "kyc",
        "options",
        "wallet",
        "address",
        "blockchain",
        "swap",
        "token",
        "pair",
        "trading",
        "aml"
      ],
      "lines_of_code": 963,
      "has_dockerfile": true,
      "has_requirements": true,
      "language": "Python"
    }
  },
  "frontend_components": {
    "tailwind.config.js": {
      "path": "/workspace/TigerEx/frontend/tailwind.config.js",
      "lines": 575,
      "is_admin": false,
      "features": [
        "margin",
        "trading"
      ]
    },
    "App.tsx": {
      "path": "/workspace/TigerEx/frontend/admin-dashboard/src/App.tsx",
      "lines": 307,
      "is_admin": true,
      "features": [
        "listing",
        "admin",
        "kyc",
        "options",
        "blockchain",
        "user",
        "margin",
        "trading",
        "p2p"
      ]
    },
    "AuthContext.tsx": {
      "path": "/workspace/TigerEx/frontend/admin-dashboard/src/contexts/AuthContext.tsx",
      "lines": 251,
      "is_admin": true,
      "features": [
        "admin",
        "user",
        "token"
      ]
    },
    "auth.ts": {
      "path": "/workspace/TigerEx/frontend/admin-dashboard/src/types/auth.ts",
      "lines": 109,
      "is_admin": true,
      "features": [
        "listing",
        "admin",
        "kyc",
        "wallet",
        "blockchain",
        "user",
        "token",
        "pair",
        "trading",
        "withdrawal",
        "p2p",
        "compliance"
      ]
    },
    "TokenListingPanel.tsx": {
      "path": "/workspace/TigerEx/frontend/components/advanced/TokenListingPanel.tsx",
      "lines": 670,
      "is_admin": false,
      "features": [
        "listing",
        "kyc",
        "address",
        "blockchain",
        "user",
        "liquidity",
        "token",
        "pair",
        "evm",
        "compliance",
        "aml"
      ]
    },
    "TradingPlatform.tsx": {
      "path": "/workspace/TigerEx/frontend/components/traders/TradingPlatform.tsx",
      "lines": 756,
      "is_admin": false,
      "features": [
        "user",
        "token",
        "futures",
        "pair",
        "trading"
      ]
    },
    "MarketData.tsx": {
      "path": "/workspace/TigerEx/frontend/components/traders/components/MarketData.tsx",
      "lines": 145,
      "is_admin": false,
      "features": []
    },
    "OrderBook.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/trading/OrderBook.tsx",
      "lines": 87,
      "is_admin": false,
      "features": [
        "pair"
      ]
    },
    "TradeHistory.tsx": {
      "path": "/workspace/TigerEx/frontend/components/traders/components/TradeHistory.tsx",
      "lines": 131,
      "is_admin": false,
      "features": []
    },
    "useAuth.tsx": {
      "path": "/workspace/TigerEx/frontend/hooks/useAuth.tsx",
      "lines": 95,
      "is_admin": false,
      "features": [
        "user",
        "token"
      ]
    },
    "useWebSocket.ts": {
      "path": "/workspace/TigerEx/frontend/hooks/useWebSocket.ts",
      "lines": 100,
      "is_admin": false,
      "features": [
        "user"
      ]
    },
    "AdminDashboard.tsx": {
      "path": "/workspace/TigerEx/frontend/src/pages/AdminDashboard.tsx",
      "lines": 464,
      "is_admin": true,
      "features": [
        "blockchain",
        "user",
        "trading",
        "admin"
      ]
    },
    "ComplianceManagement.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/admin/ComplianceManagement.tsx",
      "lines": 1143,
      "is_admin": true,
      "features": [
        "admin",
        "kyc",
        "iou",
        "user",
        "token",
        "compliance",
        "aml"
      ]
    },
    "SuperAdminDashboard.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/admin/SuperAdminDashboard.tsx",
      "lines": 1163,
      "is_admin": true,
      "features": [
        "listing",
        "admin",
        "kyc",
        "options",
        "wallet",
        "blockchain",
        "user",
        "token",
        "staking",
        "futures",
        "trading",
        "spot",
        "evm"
      ]
    },
    "TradingControl.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/admin/TradingControl.tsx",
      "lines": 1099,
      "is_admin": true,
      "features": [
        "admin",
        "swap",
        "margin",
        "token",
        "futures",
        "pair",
        "trading",
        "withdrawal",
        "spot"
      ]
    },
    "UserManagement.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/admin/UserManagement.tsx",
      "lines": 996,
      "is_admin": true,
      "features": [
        "admin",
        "kyc",
        "user",
        "token",
        "trading",
        "compliance"
      ]
    },
    "Navigation.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/layout/Navigation.tsx",
      "lines": 308,
      "is_admin": false,
      "features": [
        "admin",
        "options",
        "wallet",
        "user",
        "margin",
        "futures",
        "pair",
        "trading",
        "spot",
        "compliance"
      ]
    },
    "AdvancedTradingInterface.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/trading/AdvancedTradingInterface.tsx",
      "lines": 1032,
      "is_admin": false,
      "features": [
        "options",
        "user",
        "margin",
        "futures",
        "pair",
        "trading",
        "spot"
      ]
    },
    "MarketSelector.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/trading/MarketSelector.tsx",
      "lines": 180,
      "is_admin": false,
      "features": [
        "pair"
      ]
    },
    "OrderForm.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/trading/OrderForm.tsx",
      "lines": 173,
      "is_admin": false,
      "features": [
        "pair",
        "trading",
        "futures",
        "spot"
      ]
    },
    "PositionsPanel.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/trading/PositionsPanel.tsx",
      "lines": 304,
      "is_admin": false,
      "features": [
        "margin"
      ]
    },
    "TradingChart.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/trading/TradingChart.tsx",
      "lines": 26,
      "is_admin": false,
      "features": [
        "pair",
        "trading"
      ]
    },
    "TradingHeader.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/trading/TradingHeader.tsx",
      "lines": 68,
      "is_admin": false,
      "features": [
        "deposit",
        "options",
        "user",
        "futures",
        "trading",
        "spot",
        "p2p"
      ]
    },
    "TradingInterface.tsx": {
      "path": "/workspace/TigerEx/frontend/src/components/trading/TradingInterface.tsx",
      "lines": 93,
      "is_admin": false,
      "features": [
        "pair",
        "trading"
      ]
    },
    "index.tsx": {
      "path": "/workspace/TigerEx/admin-panel/src/pages/index.tsx",
      "lines": 122,
      "is_admin": true,
      "features": [
        "user",
        "trading",
        "kyc"
      ]
    },
    "trading-pairs.tsx": {
      "path": "/workspace/TigerEx/frontend/src/pages/admin/trading-pairs.tsx",
      "lines": 1209,
      "is_admin": true,
      "features": [
        "admin",
        "options",
        "margin",
        "futures",
        "pair",
        "trading",
        "spot"
      ]
    },
    "alpha.tsx": {
      "path": "/workspace/TigerEx/frontend/src/pages/trading/alpha.tsx",
      "lines": 876,
      "is_admin": false,
      "features": [
        "generation",
        "trading"
      ]
    },
    "etf.tsx": {
      "path": "/workspace/TigerEx/frontend/src/pages/trading/etf.tsx",
      "lines": 816,
      "is_admin": false,
      "features": [
        "user",
        "trading"
      ]
    },
    "futures.tsx": {
      "path": "/workspace/TigerEx/frontend/src/pages/trading/futures.tsx",
      "lines": 666,
      "is_admin": false,
      "features": [
        "futures",
        "margin",
        "trading"
      ]
    },
    "margin.tsx": {
      "path": "/workspace/TigerEx/frontend/src/pages/trading/margin.tsx",
      "lines": 741,
      "is_admin": false,
      "features": [
        "pair",
        "margin",
        "trading"
      ]
    },
    "options.tsx": {
      "path": "/workspace/TigerEx/frontend/src/pages/trading/options.tsx",
      "lines": 664,
      "is_admin": false,
      "features": [
        "spot",
        "trading",
        "options"
      ]
    },
    "spot.tsx": {
      "path": "/workspace/TigerEx/frontend/src/pages/trading/spot.tsx",
      "lines": 697,
      "is_admin": false,
      "features": [
        "pair",
        "user",
        "trading",
        "spot"
      ]
    },
    "next.config.js": {
      "path": "/workspace/TigerEx/frontend/web-app/next.config.js",
      "lines": 113,
      "is_admin": false,
      "features": [
        "options"
      ]
    },
    "page.tsx": {
      "path": "/workspace/TigerEx/frontend/web-app/src/app/page.tsx",
      "lines": 335,
      "is_admin": false,
      "features": [
        "options",
        "wallet",
        "user",
        "futures",
        "pair",
        "trading",
        "spot",
        "p2p",
        "generation"
      ]
    },
    "P2PTrading.tsx": {
      "path": "/workspace/TigerEx/frontend/web-app/src/pages/p2p/P2PTrading.tsx",
      "lines": 509,
      "is_admin": false,
      "features": [
        "user",
        "trading",
        "admin",
        "p2p"
      ]
    },
    "FuturesTrading.tsx": {
      "path": "/workspace/TigerEx/frontend/web-app/src/pages/trading/FuturesTrading.tsx",
      "lines": 578,
      "is_admin": false,
      "features": [
        "user",
        "margin",
        "futures",
        "pair",
        "trading"
      ]
    },
    "SpotTrading.tsx": {
      "path": "/workspace/TigerEx/frontend/web-app/src/pages/trading/SpotTrading.tsx",
      "lines": 393,
      "is_admin": false,
      "features": [
        "pair",
        "user",
        "trading",
        "spot"
      ]
    }
  },
  "admin_capabilities": {
    "token_listing": true,
    "trading_pair_management": true,
    "liquidity_pool_management": true,
    "deposit_withdrawal_control": true,
    "evm_blockchain_integration": true,
    "non_evm_blockchain_integration": true,
    "iou_token_creation": true,
    "virtual_liquidity_management": true,
    "user_management": true,
    "kyc_management": true,
    "compliance_management": true,
    "system_configuration": false
  },
  "user_capabilities": {},
  "blockchain_support": {
    "evm_chains": [
      "blockchain-integration-service"
    ],
    "non_evm_chains": [
      "blockchain-integration-service"
    ],
    "address_generation": true,
    "wallet_management": true
  },
  "missing_features": [],
  "statistics": {
    "total_services": 113,
    "admin_services": 18,
    "total_components": 37,
    "admin_components": 11
  }
}